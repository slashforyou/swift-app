name: 🚀 CI/CD Pipeline

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main, develop ]

jobs:
  # ==========================================
  # Job 1: Tests & Coverage
  # ==========================================
  test:
    name: 🧪 Tests & Coverage
    runs-on: ubuntu-latest
    
    strategy:
      matrix:
        node-version: [18.x, 20.x]
    
    steps:
      - name: 📥 Checkout code
        uses: actions/checkout@v4
      
      - name: 🟢 Setup Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v4
        with:
          node-version: ${{ matrix.node-version }}
          cache: 'npm'
      
      - name: 📦 Install dependencies
        run: npm ci
      
      - name: 🔍 Run TypeScript compiler check
        run: npx tsc --noEmit
      
      - name: 🧪 Run all tests
        run: npm test -- --coverage --maxWorkers=2
      
      - name: 📊 Generate coverage report
        if: matrix.node-version == '20.x'
        run: |
          echo "Coverage Summary:" >> $GITHUB_STEP_SUMMARY
          echo '```' >> $GITHUB_STEP_SUMMARY
          cat coverage/coverage-summary.txt >> $GITHUB_STEP_SUMMARY || echo "No coverage summary available" >> $GITHUB_STEP_SUMMARY
          echo '```' >> $GITHUB_STEP_SUMMARY
      
      - name: 📈 Upload coverage to Codecov
        if: matrix.node-version == '20.x'
        uses: codecov/codecov-action@v4
        with:
          token: ${{ secrets.CODECOV_TOKEN }}
          files: ./coverage/lcov.info
          flags: unittests
          name: swift-app-coverage
          fail_ci_if_error: false
      
      - name: 💾 Upload coverage artifacts
        if: matrix.node-version == '20.x'
        uses: actions/upload-artifact@v4
        with:
          name: coverage-report
          path: coverage/
          retention-days: 30

  # ==========================================
  # Job 2: Linting & Code Quality
  # ==========================================
  lint:
    name: 🔍 Lint & Code Quality
    runs-on: ubuntu-latest
    
    steps:
      - name: 📥 Checkout code
        uses: actions/checkout@v4
      
      - name: 🟢 Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20.x'
          cache: 'npm'
      
      - name: 📦 Install dependencies
        run: npm ci
      
      - name: 🔍 Run ESLint
        run: npm run lint --if-present || echo "⚠️ No lint script found"
        continue-on-error: true
      
      - name: 📝 Check formatting (Prettier)
        run: npx prettier --check "src/**/*.{ts,tsx,js,jsx}" || echo "⚠️ Prettier check skipped"
        continue-on-error: true

  # ==========================================
  # Job 3: Build Validation
  # ==========================================
  build:
    name: 🏗️ Build Validation
    runs-on: ubuntu-latest
    
    steps:
      - name: 📥 Checkout code
        uses: actions/checkout@v4
      
      - name: 🟢 Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20.x'
          cache: 'npm'
      
      - name: 📦 Install dependencies
        run: npm ci
      
      - name: 🏗️ Build TypeScript
        run: npx tsc --noEmit
      
      - name: 📱 Check Expo compatibility
        run: |
          echo "✅ Checking Expo project structure..."
          test -f app.json && echo "✅ app.json exists" || echo "❌ app.json missing"
          test -f package.json && echo "✅ package.json exists" || echo "❌ package.json missing"
      
      - name: 📊 Build summary
        run: |
          echo "## 🏗️ Build Summary" >> $GITHUB_STEP_SUMMARY
          echo "✅ TypeScript compilation successful" >> $GITHUB_STEP_SUMMARY
          echo "✅ All dependencies installed" >> $GITHUB_STEP_SUMMARY
          echo "✅ Project structure validated" >> $GITHUB_STEP_SUMMARY

  # ==========================================
  # Job 4: Security Audit
  # ==========================================
  security:
    name: 🔒 Security Audit
    runs-on: ubuntu-latest
    
    steps:
      - name: 📥 Checkout code
        uses: actions/checkout@v4
      
      - name: 🟢 Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20.x'
          cache: 'npm'
      
      - name: 🔒 Run npm audit
        run: npm audit --audit-level=high
        continue-on-error: true
      
      - name: 📊 Security summary
        run: |
          echo "## 🔒 Security Audit" >> $GITHUB_STEP_SUMMARY
          npm audit --audit-level=moderate >> $GITHUB_STEP_SUMMARY || echo "⚠️ Some vulnerabilities found" >> $GITHUB_STEP_SUMMARY

  # ==========================================
  # Job 5: Test Results Summary
  # ==========================================
  summary:
    name: 📊 Pipeline Summary
    runs-on: ubuntu-latest
    needs: [test, lint, build, security]
    if: always()
    
    steps:
      - name: 📊 Generate summary
        run: |
          echo "# 🚀 CI/CD Pipeline Results" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "## Status Overview" >> $GITHUB_STEP_SUMMARY
          echo "- 🧪 Tests: ${{ needs.test.result }}" >> $GITHUB_STEP_SUMMARY
          echo "- 🔍 Linting: ${{ needs.lint.result }}" >> $GITHUB_STEP_SUMMARY
          echo "- 🏗️ Build: ${{ needs.build.result }}" >> $GITHUB_STEP_SUMMARY
          echo "- 🔒 Security: ${{ needs.security.result }}" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "---" >> $GITHUB_STEP_SUMMARY
          echo "**Commit:** ${{ github.sha }}" >> $GITHUB_STEP_SUMMARY
          echo "**Branch:** ${{ github.ref_name }}" >> $GITHUB_STEP_SUMMARY
          echo "**Author:** ${{ github.actor }}" >> $GITHUB_STEP_SUMMARY
