
> swift-app@0.0.1 test
> jest TrucksScreen.test.tsx

  console.error
    An update to Icon inside a test was not wrapped in act(...).
    
    When testing, code that causes React state updates should be wrapped into act(...):
    
    act(() => {
      /* fire events that update state */
    });
    /* assert on the output */
    
    This ensures that you're testing the behavior the user would see in the browser. Learn more at https://react.dev/link/wrap-tests-with-act

      at node_modules/react-test-renderer/cjs/react-test-renderer.development.js:11516:19
      at runWithFiberInDEV (node_modules/react-test-renderer/cjs/react-test-renderer.development.js:540:16)
      at warnIfUpdatesNotWrappedWithActDEV (node_modules/react-test-renderer/cjs/react-test-renderer.development.js:11515:9)
      at scheduleUpdateOnFiber (node_modules/react-test-renderer/cjs/react-test-renderer.development.js:10234:9)
      at Object.enqueueSetState (node_modules/react-test-renderer/cjs/react-test-renderer.development.js:13923:14)
      at Icon.Object.<anonymous>.process.env.NODE_ENV.Component.setState (node_modules/react/cjs/react.development.js:928:20)
      at Icon.setState (node_modules/@expo/vector-icons/src/createIconSet.tsx:133:31)
      at asyncGeneratorStep (node_modules/@babel/runtime/helpers/asyncToGenerator.js:3:17)
      at _next (node_modules/@babel/runtime/helpers/asyncToGenerator.js:17:9)

  console.error
    An update to Icon inside a test was not wrapped in act(...).
    
    When testing, code that causes React state updates should be wrapped into act(...):
    
    act(() => {
      /* fire events that update state */
    });
    /* assert on the output */
    
    This ensures that you're testing the behavior the user would see in the browser. Learn more at https://react.dev/link/wrap-tests-with-act

      at node_modules/react-test-renderer/cjs/react-test-renderer.development.js:11516:19
      at runWithFiberInDEV (node_modules/react-test-renderer/cjs/react-test-renderer.development.js:540:16)
      at warnIfUpdatesNotWrappedWithActDEV (node_modules/react-test-renderer/cjs/react-test-renderer.development.js:11515:9)
      at scheduleUpdateOnFiber (node_modules/react-test-renderer/cjs/react-test-renderer.development.js:10234:9)
      at Object.enqueueSetState (node_modules/react-test-renderer/cjs/react-test-renderer.development.js:13923:14)
      at Icon.Object.<anonymous>.process.env.NODE_ENV.Component.setState (node_modules/react/cjs/react.development.js:928:20)
      at Icon.setState (node_modules/@expo/vector-icons/src/createIconSet.tsx:133:31)
      at asyncGeneratorStep (node_modules/@babel/runtime/helpers/asyncToGenerator.js:3:17)
      at _next (node_modules/@babel/runtime/helpers/asyncToGenerator.js:17:9)

  console.error
    An update to Icon inside a test was not wrapped in act(...).
    
    When testing, code that causes React state updates should be wrapped into act(...):
    
    act(() => {
      /* fire events that update state */
    });
    /* assert on the output */
    
    This ensures that you're testing the behavior the user would see in the browser. Learn more at https://react.dev/link/wrap-tests-with-act

      at node_modules/react-test-renderer/cjs/react-test-renderer.development.js:11516:19
      at runWithFiberInDEV (node_modules/react-test-renderer/cjs/react-test-renderer.development.js:540:16)
      at warnIfUpdatesNotWrappedWithActDEV (node_modules/react-test-renderer/cjs/react-test-renderer.development.js:11515:9)
      at scheduleUpdateOnFiber (node_modules/react-test-renderer/cjs/react-test-renderer.development.js:10234:9)
      at Object.enqueueSetState (node_modules/react-test-renderer/cjs/react-test-renderer.development.js:13923:14)
      at Icon.Object.<anonymous>.process.env.NODE_ENV.Component.setState (node_modules/react/cjs/react.development.js:928:20)
      at Icon.setState (node_modules/@expo/vector-icons/src/createIconSet.tsx:133:31)
      at asyncGeneratorStep (node_modules/@babel/runtime/helpers/asyncToGenerator.js:3:17)
      at _next (node_modules/@babel/runtime/helpers/asyncToGenerator.js:17:9)

  console.error
    An update to Icon inside a test was not wrapped in act(...).
    
    When testing, code that causes React state updates should be wrapped into act(...):
    
    act(() => {
      /* fire events that update state */
    });
    /* assert on the output */
    
    This ensures that you're testing the behavior the user would see in the browser. Learn more at https://react.dev/link/wrap-tests-with-act

      at node_modules/react-test-renderer/cjs/react-test-renderer.development.js:11516:19
      at runWithFiberInDEV (node_modules/react-test-renderer/cjs/react-test-renderer.development.js:540:16)
      at warnIfUpdatesNotWrappedWithActDEV (node_modules/react-test-renderer/cjs/react-test-renderer.development.js:11515:9)
      at scheduleUpdateOnFiber (node_modules/react-test-renderer/cjs/react-test-renderer.development.js:10234:9)
      at Object.enqueueSetState (node_modules/react-test-renderer/cjs/react-test-renderer.development.js:13923:14)
      at Icon.Object.<anonymous>.process.env.NODE_ENV.Component.setState (node_modules/react/cjs/react.development.js:928:20)
      at Icon.setState (node_modules/@expo/vector-icons/src/createIconSet.tsx:133:31)
      at asyncGeneratorStep (node_modules/@babel/runtime/helpers/asyncToGenerator.js:3:17)
      at _next (node_modules/@babel/runtime/helpers/asyncToGenerator.js:17:9)

  console.error
    An update to Icon inside a test was not wrapped in act(...).
    
    When testing, code that causes React state updates should be wrapped into act(...):
    
    act(() => {
      /* fire events that update state */
    });
    /* assert on the output */
    
    This ensures that you're testing the behavior the user would see in the browser. Learn more at https://react.dev/link/wrap-tests-with-act

      at node_modules/react-test-renderer/cjs/react-test-renderer.development.js:11516:19
      at runWithFiberInDEV (node_modules/react-test-renderer/cjs/react-test-renderer.development.js:540:16)
      at warnIfUpdatesNotWrappedWithActDEV (node_modules/react-test-renderer/cjs/react-test-renderer.development.js:11515:9)
      at scheduleUpdateOnFiber (node_modules/react-test-renderer/cjs/react-test-renderer.development.js:10234:9)
      at Object.enqueueSetState (node_modules/react-test-renderer/cjs/react-test-renderer.development.js:13923:14)
      at Icon.Object.<anonymous>.process.env.NODE_ENV.Component.setState (node_modules/react/cjs/react.development.js:928:20)
      at Icon.setState (node_modules/@expo/vector-icons/src/createIconSet.tsx:133:31)
      at asyncGeneratorStep (node_modules/@babel/runtime/helpers/asyncToGenerator.js:3:17)
      at _next (node_modules/@babel/runtime/helpers/asyncToGenerator.js:17:9)

  console.error
    An update to Icon inside a test was not wrapped in act(...).
    
    When testing, code that causes React state updates should be wrapped into act(...):
    
    act(() => {
      /* fire events that update state */
    });
    /* assert on the output */
    
    This ensures that you're testing the behavior the user would see in the browser. Learn more at https://react.dev/link/wrap-tests-with-act

      at node_modules/react-test-renderer/cjs/react-test-renderer.development.js:11516:19
      at runWithFiberInDEV (node_modules/react-test-renderer/cjs/react-test-renderer.development.js:540:16)
      at warnIfUpdatesNotWrappedWithActDEV (node_modules/react-test-renderer/cjs/react-test-renderer.development.js:11515:9)
      at scheduleUpdateOnFiber (node_modules/react-test-renderer/cjs/react-test-renderer.development.js:10234:9)
      at Object.enqueueSetState (node_modules/react-test-renderer/cjs/react-test-renderer.development.js:13923:14)
      at Icon.Object.<anonymous>.process.env.NODE_ENV.Component.setState (node_modules/react/cjs/react.development.js:928:20)
      at Icon.setState (node_modules/@expo/vector-icons/src/createIconSet.tsx:133:31)
      at asyncGeneratorStep (node_modules/@babel/runtime/helpers/asyncToGenerator.js:3:17)
      at _next (node_modules/@babel/runtime/helpers/asyncToGenerator.js:17:9)

  console.error
    An update to Icon inside a test was not wrapped in act(...).
    
    When testing, code that causes React state updates should be wrapped into act(...):
    
    act(() => {
      /* fire events that update state */
    });
    /* assert on the output */
    
    This ensures that you're testing the behavior the user would see in the browser. Learn more at https://react.dev/link/wrap-tests-with-act

      at node_modules/react-test-renderer/cjs/react-test-renderer.development.js:11516:19
      at runWithFiberInDEV (node_modules/react-test-renderer/cjs/react-test-renderer.development.js:540:16)
      at warnIfUpdatesNotWrappedWithActDEV (node_modules/react-test-renderer/cjs/react-test-renderer.development.js:11515:9)
      at scheduleUpdateOnFiber (node_modules/react-test-renderer/cjs/react-test-renderer.development.js:10234:9)
      at Object.enqueueSetState (node_modules/react-test-renderer/cjs/react-test-renderer.development.js:13923:14)
      at Icon.Object.<anonymous>.process.env.NODE_ENV.Component.setState (node_modules/react/cjs/react.development.js:928:20)
      at Icon.setState (node_modules/@expo/vector-icons/src/createIconSet.tsx:133:31)
      at asyncGeneratorStep (node_modules/@babel/runtime/helpers/asyncToGenerator.js:3:17)
      at _next (node_modules/@babel/runtime/helpers/asyncToGenerator.js:17:9)

  console.error
    An update to Icon inside a test was not wrapped in act(...).
    
    When testing, code that causes React state updates should be wrapped into act(...):
    
    act(() => {
      /* fire events that update state */
    });
    /* assert on the output */
    
    This ensures that you're testing the behavior the user would see in the browser. Learn more at https://react.dev/link/wrap-tests-with-act

      at node_modules/react-test-renderer/cjs/react-test-renderer.development.js:11516:19
      at runWithFiberInDEV (node_modules/react-test-renderer/cjs/react-test-renderer.development.js:540:16)
      at warnIfUpdatesNotWrappedWithActDEV (node_modules/react-test-renderer/cjs/react-test-renderer.development.js:11515:9)
      at scheduleUpdateOnFiber (node_modules/react-test-renderer/cjs/react-test-renderer.development.js:10234:9)
      at Object.enqueueSetState (node_modules/react-test-renderer/cjs/react-test-renderer.development.js:13923:14)
      at Icon.Object.<anonymous>.process.env.NODE_ENV.Component.setState (node_modules/react/cjs/react.development.js:928:20)
      at Icon.setState (node_modules/@expo/vector-icons/src/createIconSet.tsx:133:31)
      at asyncGeneratorStep (node_modules/@babel/runtime/helpers/asyncToGenerator.js:3:17)
      at _next (node_modules/@babel/runtime/helpers/asyncToGenerator.js:17:9)

  console.error
    An update to Icon inside a test was not wrapped in act(...).
    
    When testing, code that causes React state updates should be wrapped into act(...):
    
    act(() => {
      /* fire events that update state */
    });
    /* assert on the output */
    
    This ensures that you're testing the behavior the user would see in the browser. Learn more at https://react.dev/link/wrap-tests-with-act

      at node_modules/react-test-renderer/cjs/react-test-renderer.development.js:11516:19
      at runWithFiberInDEV (node_modules/react-test-renderer/cjs/react-test-renderer.development.js:540:16)
      at warnIfUpdatesNotWrappedWithActDEV (node_modules/react-test-renderer/cjs/react-test-renderer.development.js:11515:9)
      at scheduleUpdateOnFiber (node_modules/react-test-renderer/cjs/react-test-renderer.development.js:10234:9)
      at Object.enqueueSetState (node_modules/react-test-renderer/cjs/react-test-renderer.development.js:13923:14)
      at Icon.Object.<anonymous>.process.env.NODE_ENV.Component.setState (node_modules/react/cjs/react.development.js:928:20)
      at Icon.setState (node_modules/@expo/vector-icons/src/createIconSet.tsx:133:31)
      at asyncGeneratorStep (node_modules/@babel/runtime/helpers/asyncToGenerator.js:3:17)
      at _next (node_modules/@babel/runtime/helpers/asyncToGenerator.js:17:9)

  console.error
    An update to Icon inside a test was not wrapped in act(...).
    
    When testing, code that causes React state updates should be wrapped into act(...):
    
    act(() => {
      /* fire events that update state */
    });
    /* assert on the output */
    
    This ensures that you're testing the behavior the user would see in the browser. Learn more at https://react.dev/link/wrap-tests-with-act

      at node_modules/react-test-renderer/cjs/react-test-renderer.development.js:11516:19
      at runWithFiberInDEV (node_modules/react-test-renderer/cjs/react-test-renderer.development.js:540:16)
      at warnIfUpdatesNotWrappedWithActDEV (node_modules/react-test-renderer/cjs/react-test-renderer.development.js:11515:9)
      at scheduleUpdateOnFiber (node_modules/react-test-renderer/cjs/react-test-renderer.development.js:10234:9)
      at Object.enqueueSetState (node_modules/react-test-renderer/cjs/react-test-renderer.development.js:13923:14)
      at Icon.Object.<anonymous>.process.env.NODE_ENV.Component.setState (node_modules/react/cjs/react.development.js:928:20)
      at Icon.setState (node_modules/@expo/vector-icons/src/createIconSet.tsx:133:31)
      at asyncGeneratorStep (node_modules/@babel/runtime/helpers/asyncToGenerator.js:3:17)
      at _next (node_modules/@babel/runtime/helpers/asyncToGenerator.js:17:9)

  console.error
    An update to Icon inside a test was not wrapped in act(...).
    
    When testing, code that causes React state updates should be wrapped into act(...):
    
    act(() => {
      /* fire events that update state */
    });
    /* assert on the output */
    
    This ensures that you're testing the behavior the user would see in the browser. Learn more at https://react.dev/link/wrap-tests-with-act

      at node_modules/react-test-renderer/cjs/react-test-renderer.development.js:11516:19
      at runWithFiberInDEV (node_modules/react-test-renderer/cjs/react-test-renderer.development.js:540:16)
      at warnIfUpdatesNotWrappedWithActDEV (node_modules/react-test-renderer/cjs/react-test-renderer.development.js:11515:9)
      at scheduleUpdateOnFiber (node_modules/react-test-renderer/cjs/react-test-renderer.development.js:10234:9)
      at Object.enqueueSetState (node_modules/react-test-renderer/cjs/react-test-renderer.development.js:13923:14)
      at Icon.Object.<anonymous>.process.env.NODE_ENV.Component.setState (node_modules/react/cjs/react.development.js:928:20)
      at Icon.setState (node_modules/@expo/vector-icons/src/createIconSet.tsx:133:31)
      at asyncGeneratorStep (node_modules/@babel/runtime/helpers/asyncToGenerator.js:3:17)
      at _next (node_modules/@babel/runtime/helpers/asyncToGenerator.js:17:9)

  console.error
    An update to Icon inside a test was not wrapped in act(...).
    
    When testing, code that causes React state updates should be wrapped into act(...):
    
    act(() => {
      /* fire events that update state */
    });
    /* assert on the output */
    
    This ensures that you're testing the behavior the user would see in the browser. Learn more at https://react.dev/link/wrap-tests-with-act

      at node_modules/react-test-renderer/cjs/react-test-renderer.development.js:11516:19
      at runWithFiberInDEV (node_modules/react-test-renderer/cjs/react-test-renderer.development.js:540:16)
      at warnIfUpdatesNotWrappedWithActDEV (node_modules/react-test-renderer/cjs/react-test-renderer.development.js:11515:9)
      at scheduleUpdateOnFiber (node_modules/react-test-renderer/cjs/react-test-renderer.development.js:10234:9)
      at Object.enqueueSetState (node_modules/react-test-renderer/cjs/react-test-renderer.development.js:13923:14)
      at Icon.Object.<anonymous>.process.env.NODE_ENV.Component.setState (node_modules/react/cjs/react.development.js:928:20)
      at Icon.setState (node_modules/@expo/vector-icons/src/createIconSet.tsx:133:31)
      at asyncGeneratorStep (node_modules/@babel/runtime/helpers/asyncToGenerator.js:3:17)
      at _next (node_modules/@babel/runtime/helpers/asyncToGenerator.js:17:9)

  console.error
    An update to Icon inside a test was not wrapped in act(...).
    
    When testing, code that causes React state updates should be wrapped into act(...):
    
    act(() => {
      /* fire events that update state */
    });
    /* assert on the output */
    
    This ensures that you're testing the behavior the user would see in the browser. Learn more at https://react.dev/link/wrap-tests-with-act

      at node_modules/react-test-renderer/cjs/react-test-renderer.development.js:11516:19
      at runWithFiberInDEV (node_modules/react-test-renderer/cjs/react-test-renderer.development.js:540:16)
      at warnIfUpdatesNotWrappedWithActDEV (node_modules/react-test-renderer/cjs/react-test-renderer.development.js:11515:9)
      at scheduleUpdateOnFiber (node_modules/react-test-renderer/cjs/react-test-renderer.development.js:10234:9)
      at Object.enqueueSetState (node_modules/react-test-renderer/cjs/react-test-renderer.development.js:13923:14)
      at Icon.Object.<anonymous>.process.env.NODE_ENV.Component.setState (node_modules/react/cjs/react.development.js:928:20)
      at Icon.setState (node_modules/@expo/vector-icons/src/createIconSet.tsx:133:31)
      at asyncGeneratorStep (node_modules/@babel/runtime/helpers/asyncToGenerator.js:3:17)
      at _next (node_modules/@babel/runtime/helpers/asyncToGenerator.js:17:9)

  console.error
    An update to Icon inside a test was not wrapped in act(...).
    
    When testing, code that causes React state updates should be wrapped into act(...):
    
    act(() => {
      /* fire events that update state */
    });
    /* assert on the output */
    
    This ensures that you're testing the behavior the user would see in the browser. Learn more at https://react.dev/link/wrap-tests-with-act

      at node_modules/react-test-renderer/cjs/react-test-renderer.development.js:11516:19
      at runWithFiberInDEV (node_modules/react-test-renderer/cjs/react-test-renderer.development.js:540:16)
      at warnIfUpdatesNotWrappedWithActDEV (node_modules/react-test-renderer/cjs/react-test-renderer.development.js:11515:9)
      at scheduleUpdateOnFiber (node_modules/react-test-renderer/cjs/react-test-renderer.development.js:10234:9)
      at Object.enqueueSetState (node_modules/react-test-renderer/cjs/react-test-renderer.development.js:13923:14)
      at Icon.Object.<anonymous>.process.env.NODE_ENV.Component.setState (node_modules/react/cjs/react.development.js:928:20)
      at Icon.setState (node_modules/@expo/vector-icons/src/createIconSet.tsx:133:31)
      at asyncGeneratorStep (node_modules/@babel/runtime/helpers/asyncToGenerator.js:3:17)
      at _next (node_modules/@babel/runtime/helpers/asyncToGenerator.js:17:9)

  console.error
    An update to Icon inside a test was not wrapped in act(...).
    
    When testing, code that causes React state updates should be wrapped into act(...):
    
    act(() => {
      /* fire events that update state */
    });
    /* assert on the output */
    
    This ensures that you're testing the behavior the user would see in the browser. Learn more at https://react.dev/link/wrap-tests-with-act

      at node_modules/react-test-renderer/cjs/react-test-renderer.development.js:11516:19
      at runWithFiberInDEV (node_modules/react-test-renderer/cjs/react-test-renderer.development.js:540:16)
      at warnIfUpdatesNotWrappedWithActDEV (node_modules/react-test-renderer/cjs/react-test-renderer.development.js:11515:9)
      at scheduleUpdateOnFiber (node_modules/react-test-renderer/cjs/react-test-renderer.development.js:10234:9)
      at Object.enqueueSetState (node_modules/react-test-renderer/cjs/react-test-renderer.development.js:13923:14)
      at Icon.Object.<anonymous>.process.env.NODE_ENV.Component.setState (node_modules/react/cjs/react.development.js:928:20)
      at Icon.setState (node_modules/@expo/vector-icons/src/createIconSet.tsx:133:31)
      at asyncGeneratorStep (node_modules/@babel/runtime/helpers/asyncToGenerator.js:3:17)
      at _next (node_modules/@babel/runtime/helpers/asyncToGenerator.js:17:9)

  console.error
    An update to Icon inside a test was not wrapped in act(...).
    
    When testing, code that causes React state updates should be wrapped into act(...):
    
    act(() => {
      /* fire events that update state */
    });
    /* assert on the output */
    
    This ensures that you're testing the behavior the user would see in the browser. Learn more at https://react.dev/link/wrap-tests-with-act

      at node_modules/react-test-renderer/cjs/react-test-renderer.development.js:11516:19
      at runWithFiberInDEV (node_modules/react-test-renderer/cjs/react-test-renderer.development.js:540:16)
      at warnIfUpdatesNotWrappedWithActDEV (node_modules/react-test-renderer/cjs/react-test-renderer.development.js:11515:9)
      at scheduleUpdateOnFiber (node_modules/react-test-renderer/cjs/react-test-renderer.development.js:10234:9)
      at Object.enqueueSetState (node_modules/react-test-renderer/cjs/react-test-renderer.development.js:13923:14)
      at Icon.Object.<anonymous>.process.env.NODE_ENV.Component.setState (node_modules/react/cjs/react.development.js:928:20)
      at Icon.setState (node_modules/@expo/vector-icons/src/createIconSet.tsx:133:31)
      at asyncGeneratorStep (node_modules/@babel/runtime/helpers/asyncToGenerator.js:3:17)
      at _next (node_modules/@babel/runtime/helpers/asyncToGenerator.js:17:9)

  console.error
    An update to Icon inside a test was not wrapped in act(...).
    
    When testing, code that causes React state updates should be wrapped into act(...):
    
    act(() => {
      /* fire events that update state */
    });
    /* assert on the output */
    
    This ensures that you're testing the behavior the user would see in the browser. Learn more at https://react.dev/link/wrap-tests-with-act

      at node_modules/react-test-renderer/cjs/react-test-renderer.development.js:11516:19
      at runWithFiberInDEV (node_modules/react-test-renderer/cjs/react-test-renderer.development.js:540:16)
      at warnIfUpdatesNotWrappedWithActDEV (node_modules/react-test-renderer/cjs/react-test-renderer.development.js:11515:9)
      at scheduleUpdateOnFiber (node_modules/react-test-renderer/cjs/react-test-renderer.development.js:10234:9)
      at Object.enqueueSetState (node_modules/react-test-renderer/cjs/react-test-renderer.development.js:13923:14)
      at Icon.Object.<anonymous>.process.env.NODE_ENV.Component.setState (node_modules/react/cjs/react.development.js:928:20)
      at Icon.setState (node_modules/@expo/vector-icons/src/createIconSet.tsx:133:31)
      at asyncGeneratorStep (node_modules/@babel/runtime/helpers/asyncToGenerator.js:3:17)
      at _next (node_modules/@babel/runtime/helpers/asyncToGenerator.js:17:9)

  console.error
    An update to Icon inside a test was not wrapped in act(...).
    
    When testing, code that causes React state updates should be wrapped into act(...):
    
    act(() => {
      /* fire events that update state */
    });
    /* assert on the output */
    
    This ensures that you're testing the behavior the user would see in the browser. Learn more at https://react.dev/link/wrap-tests-with-act

      at node_modules/react-test-renderer/cjs/react-test-renderer.development.js:11516:19
      at runWithFiberInDEV (node_modules/react-test-renderer/cjs/react-test-renderer.development.js:540:16)
      at warnIfUpdatesNotWrappedWithActDEV (node_modules/react-test-renderer/cjs/react-test-renderer.development.js:11515:9)
      at scheduleUpdateOnFiber (node_modules/react-test-renderer/cjs/react-test-renderer.development.js:10234:9)
      at Object.enqueueSetState (node_modules/react-test-renderer/cjs/react-test-renderer.development.js:13923:14)
      at Icon.Object.<anonymous>.process.env.NODE_ENV.Component.setState (node_modules/react/cjs/react.development.js:928:20)
      at Icon.setState (node_modules/@expo/vector-icons/src/createIconSet.tsx:133:31)
      at asyncGeneratorStep (node_modules/@babel/runtime/helpers/asyncToGenerator.js:3:17)
      at _next (node_modules/@babel/runtime/helpers/asyncToGenerator.js:17:9)

  console.error
    An update to Icon inside a test was not wrapped in act(...).
    
    When testing, code that causes React state updates should be wrapped into act(...):
    
    act(() => {
      /* fire events that update state */
    });
    /* assert on the output */
    
    This ensures that you're testing the behavior the user would see in the browser. Learn more at https://react.dev/link/wrap-tests-with-act

      at node_modules/react-test-renderer/cjs/react-test-renderer.development.js:11516:19
      at runWithFiberInDEV (node_modules/react-test-renderer/cjs/react-test-renderer.development.js:540:16)
      at warnIfUpdatesNotWrappedWithActDEV (node_modules/react-test-renderer/cjs/react-test-renderer.development.js:11515:9)
      at scheduleUpdateOnFiber (node_modules/react-test-renderer/cjs/react-test-renderer.development.js:10234:9)
      at Object.enqueueSetState (node_modules/react-test-renderer/cjs/react-test-renderer.development.js:13923:14)
      at Icon.Object.<anonymous>.process.env.NODE_ENV.Component.setState (node_modules/react/cjs/react.development.js:928:20)
      at Icon.setState (node_modules/@expo/vector-icons/src/createIconSet.tsx:133:31)
      at asyncGeneratorStep (node_modules/@babel/runtime/helpers/asyncToGenerator.js:3:17)
      at _next (node_modules/@babel/runtime/helpers/asyncToGenerator.js:17:9)

  console.error
    An update to Icon inside a test was not wrapped in act(...).
    
    When testing, code that causes React state updates should be wrapped into act(...):
    
    act(() => {
      /* fire events that update state */
    });
    /* assert on the output */
    
    This ensures that you're testing the behavior the user would see in the browser. Learn more at https://react.dev/link/wrap-tests-with-act

      at node_modules/react-test-renderer/cjs/react-test-renderer.development.js:11516:19
      at runWithFiberInDEV (node_modules/react-test-renderer/cjs/react-test-renderer.development.js:540:16)
      at warnIfUpdatesNotWrappedWithActDEV (node_modules/react-test-renderer/cjs/react-test-renderer.development.js:11515:9)
      at scheduleUpdateOnFiber (node_modules/react-test-renderer/cjs/react-test-renderer.development.js:10234:9)
      at Object.enqueueSetState (node_modules/react-test-renderer/cjs/react-test-renderer.development.js:13923:14)
      at Icon.Object.<anonymous>.process.env.NODE_ENV.Component.setState (node_modules/react/cjs/react.development.js:928:20)
      at Icon.setState (node_modules/@expo/vector-icons/src/createIconSet.tsx:133:31)
      at asyncGeneratorStep (node_modules/@babel/runtime/helpers/asyncToGenerator.js:3:17)
      at _next (node_modules/@babel/runtime/helpers/asyncToGenerator.js:17:9)

  console.error
    An update to Icon inside a test was not wrapped in act(...).
    
    When testing, code that causes React state updates should be wrapped into act(...):
    
    act(() => {
      /* fire events that update state */
    });
    /* assert on the output */
    
    This ensures that you're testing the behavior the user would see in the browser. Learn more at https://react.dev/link/wrap-tests-with-act

      at node_modules/react-test-renderer/cjs/react-test-renderer.development.js:11516:19
      at runWithFiberInDEV (node_modules/react-test-renderer/cjs/react-test-renderer.development.js:540:16)
      at warnIfUpdatesNotWrappedWithActDEV (node_modules/react-test-renderer/cjs/react-test-renderer.development.js:11515:9)
      at scheduleUpdateOnFiber (node_modules/react-test-renderer/cjs/react-test-renderer.development.js:10234:9)
      at Object.enqueueSetState (node_modules/react-test-renderer/cjs/react-test-renderer.development.js:13923:14)
      at Icon.Object.<anonymous>.process.env.NODE_ENV.Component.setState (node_modules/react/cjs/react.development.js:928:20)
      at Icon.setState (node_modules/@expo/vector-icons/src/createIconSet.tsx:133:31)
      at asyncGeneratorStep (node_modules/@babel/runtime/helpers/asyncToGenerator.js:3:17)
      at _next (node_modules/@babel/runtime/helpers/asyncToGenerator.js:17:9)

  console.error
    An update to Icon inside a test was not wrapped in act(...).
    
    When testing, code that causes React state updates should be wrapped into act(...):
    
    act(() => {
      /* fire events that update state */
    });
    /* assert on the output */
    
    This ensures that you're testing the behavior the user would see in the browser. Learn more at https://react.dev/link/wrap-tests-with-act

      at node_modules/react-test-renderer/cjs/react-test-renderer.development.js:11516:19
      at runWithFiberInDEV (node_modules/react-test-renderer/cjs/react-test-renderer.development.js:540:16)
      at warnIfUpdatesNotWrappedWithActDEV (node_modules/react-test-renderer/cjs/react-test-renderer.development.js:11515:9)
      at scheduleUpdateOnFiber (node_modules/react-test-renderer/cjs/react-test-renderer.development.js:10234:9)
      at Object.enqueueSetState (node_modules/react-test-renderer/cjs/react-test-renderer.development.js:13923:14)
      at Icon.Object.<anonymous>.process.env.NODE_ENV.Component.setState (node_modules/react/cjs/react.development.js:928:20)
      at Icon.setState (node_modules/@expo/vector-icons/src/createIconSet.tsx:133:31)
      at asyncGeneratorStep (node_modules/@babel/runtime/helpers/asyncToGenerator.js:3:17)
      at _next (node_modules/@babel/runtime/helpers/asyncToGenerator.js:17:9)

  console.error
    An update to Icon inside a test was not wrapped in act(...).
    
    When testing, code that causes React state updates should be wrapped into act(...):
    
    act(() => {
      /* fire events that update state */
    });
    /* assert on the output */
    
    This ensures that you're testing the behavior the user would see in the browser. Learn more at https://react.dev/link/wrap-tests-with-act

      at node_modules/react-test-renderer/cjs/react-test-renderer.development.js:11516:19
      at runWithFiberInDEV (node_modules/react-test-renderer/cjs/react-test-renderer.development.js:540:16)
      at warnIfUpdatesNotWrappedWithActDEV (node_modules/react-test-renderer/cjs/react-test-renderer.development.js:11515:9)
      at scheduleUpdateOnFiber (node_modules/react-test-renderer/cjs/react-test-renderer.development.js:10234:9)
      at Object.enqueueSetState (node_modules/react-test-renderer/cjs/react-test-renderer.development.js:13923:14)
      at Icon.Object.<anonymous>.process.env.NODE_ENV.Component.setState (node_modules/react/cjs/react.development.js:928:20)
      at Icon.setState (node_modules/@expo/vector-icons/src/createIconSet.tsx:133:31)
      at asyncGeneratorStep (node_modules/@babel/runtime/helpers/asyncToGenerator.js:3:17)
      at _next (node_modules/@babel/runtime/helpers/asyncToGenerator.js:17:9)

  console.error
    An update to Icon inside a test was not wrapped in act(...).
    
    When testing, code that causes React state updates should be wrapped into act(...):
    
    act(() => {
      /* fire events that update state */
    });
    /* assert on the output */
    
    This ensures that you're testing the behavior the user would see in the browser. Learn more at https://react.dev/link/wrap-tests-with-act

      at node_modules/react-test-renderer/cjs/react-test-renderer.development.js:11516:19
      at runWithFiberInDEV (node_modules/react-test-renderer/cjs/react-test-renderer.development.js:540:16)
      at warnIfUpdatesNotWrappedWithActDEV (node_modules/react-test-renderer/cjs/react-test-renderer.development.js:11515:9)
      at scheduleUpdateOnFiber (node_modules/react-test-renderer/cjs/react-test-renderer.development.js:10234:9)
      at Object.enqueueSetState (node_modules/react-test-renderer/cjs/react-test-renderer.development.js:13923:14)
      at Icon.Object.<anonymous>.process.env.NODE_ENV.Component.setState (node_modules/react/cjs/react.development.js:928:20)
      at Icon.setState (node_modules/@expo/vector-icons/src/createIconSet.tsx:133:31)
      at asyncGeneratorStep (node_modules/@babel/runtime/helpers/asyncToGenerator.js:3:17)
      at _next (node_modules/@babel/runtime/helpers/asyncToGenerator.js:17:9)

  console.error
    An update to Icon inside a test was not wrapped in act(...).
    
    When testing, code that causes React state updates should be wrapped into act(...):
    
    act(() => {
      /* fire events that update state */
    });
    /* assert on the output */
    
    This ensures that you're testing the behavior the user would see in the browser. Learn more at https://react.dev/link/wrap-tests-with-act

      at node_modules/react-test-renderer/cjs/react-test-renderer.development.js:11516:19
      at runWithFiberInDEV (node_modules/react-test-renderer/cjs/react-test-renderer.development.js:540:16)
      at warnIfUpdatesNotWrappedWithActDEV (node_modules/react-test-renderer/cjs/react-test-renderer.development.js:11515:9)
      at scheduleUpdateOnFiber (node_modules/react-test-renderer/cjs/react-test-renderer.development.js:10234:9)
      at Object.enqueueSetState (node_modules/react-test-renderer/cjs/react-test-renderer.development.js:13923:14)
      at Icon.Object.<anonymous>.process.env.NODE_ENV.Component.setState (node_modules/react/cjs/react.development.js:928:20)
      at Icon.setState (node_modules/@expo/vector-icons/src/createIconSet.tsx:133:31)
      at asyncGeneratorStep (node_modules/@babel/runtime/helpers/asyncToGenerator.js:3:17)
      at _next (node_modules/@babel/runtime/helpers/asyncToGenerator.js:17:9)

  console.error
    An update to Icon inside a test was not wrapped in act(...).
    
    When testing, code that causes React state updates should be wrapped into act(...):
    
    act(() => {
      /* fire events that update state */
    });
    /* assert on the output */
    
    This ensures that you're testing the behavior the user would see in the browser. Learn more at https://react.dev/link/wrap-tests-with-act

      at node_modules/react-test-renderer/cjs/react-test-renderer.development.js:11516:19
      at runWithFiberInDEV (node_modules/react-test-renderer/cjs/react-test-renderer.development.js:540:16)
      at warnIfUpdatesNotWrappedWithActDEV (node_modules/react-test-renderer/cjs/react-test-renderer.development.js:11515:9)
      at scheduleUpdateOnFiber (node_modules/react-test-renderer/cjs/react-test-renderer.development.js:10234:9)
      at Object.enqueueSetState (node_modules/react-test-renderer/cjs/react-test-renderer.development.js:13923:14)
      at Icon.Object.<anonymous>.process.env.NODE_ENV.Component.setState (node_modules/react/cjs/react.development.js:928:20)
      at Icon.setState (node_modules/@expo/vector-icons/src/createIconSet.tsx:133:31)
      at asyncGeneratorStep (node_modules/@babel/runtime/helpers/asyncToGenerator.js:3:17)
      at _next (node_modules/@babel/runtime/helpers/asyncToGenerator.js:17:9)

  console.error
    An update to Icon inside a test was not wrapped in act(...).
    
    When testing, code that causes React state updates should be wrapped into act(...):
    
    act(() => {
      /* fire events that update state */
    });
    /* assert on the output */
    
    This ensures that you're testing the behavior the user would see in the browser. Learn more at https://react.dev/link/wrap-tests-with-act

      at node_modules/react-test-renderer/cjs/react-test-renderer.development.js:11516:19
      at runWithFiberInDEV (node_modules/react-test-renderer/cjs/react-test-renderer.development.js:540:16)
      at warnIfUpdatesNotWrappedWithActDEV (node_modules/react-test-renderer/cjs/react-test-renderer.development.js:11515:9)
      at scheduleUpdateOnFiber (node_modules/react-test-renderer/cjs/react-test-renderer.development.js:10234:9)
      at Object.enqueueSetState (node_modules/react-test-renderer/cjs/react-test-renderer.development.js:13923:14)
      at Icon.Object.<anonymous>.process.env.NODE_ENV.Component.setState (node_modules/react/cjs/react.development.js:928:20)
      at Icon.setState (node_modules/@expo/vector-icons/src/createIconSet.tsx:133:31)
      at asyncGeneratorStep (node_modules/@babel/runtime/helpers/asyncToGenerator.js:3:17)
      at _next (node_modules/@babel/runtime/helpers/asyncToGenerator.js:17:9)

  console.error
    An update to Icon inside a test was not wrapped in act(...).
    
    When testing, code that causes React state updates should be wrapped into act(...):
    
    act(() => {
      /* fire events that update state */
    });
    /* assert on the output */
    
    This ensures that you're testing the behavior the user would see in the browser. Learn more at https://react.dev/link/wrap-tests-with-act

      at node_modules/react-test-renderer/cjs/react-test-renderer.development.js:11516:19
      at runWithFiberInDEV (node_modules/react-test-renderer/cjs/react-test-renderer.development.js:540:16)
      at warnIfUpdatesNotWrappedWithActDEV (node_modules/react-test-renderer/cjs/react-test-renderer.development.js:11515:9)
      at scheduleUpdateOnFiber (node_modules/react-test-renderer/cjs/react-test-renderer.development.js:10234:9)
      at Object.enqueueSetState (node_modules/react-test-renderer/cjs/react-test-renderer.development.js:13923:14)
      at Icon.Object.<anonymous>.process.env.NODE_ENV.Component.setState (node_modules/react/cjs/react.development.js:928:20)
      at Icon.setState (node_modules/@expo/vector-icons/src/createIconSet.tsx:133:31)
      at asyncGeneratorStep (node_modules/@babel/runtime/helpers/asyncToGenerator.js:3:17)
      at _next (node_modules/@babel/runtime/helpers/asyncToGenerator.js:17:9)

  console.error
    An update to Icon inside a test was not wrapped in act(...).
    
    When testing, code that causes React state updates should be wrapped into act(...):
    
    act(() => {
      /* fire events that update state */
    });
    /* assert on the output */
    
    This ensures that you're testing the behavior the user would see in the browser. Learn more at https://react.dev/link/wrap-tests-with-act

      at node_modules/react-test-renderer/cjs/react-test-renderer.development.js:11516:19
      at runWithFiberInDEV (node_modules/react-test-renderer/cjs/react-test-renderer.development.js:540:16)
      at warnIfUpdatesNotWrappedWithActDEV (node_modules/react-test-renderer/cjs/react-test-renderer.development.js:11515:9)
      at scheduleUpdateOnFiber (node_modules/react-test-renderer/cjs/react-test-renderer.development.js:10234:9)
      at Object.enqueueSetState (node_modules/react-test-renderer/cjs/react-test-renderer.development.js:13923:14)
      at Icon.Object.<anonymous>.process.env.NODE_ENV.Component.setState (node_modules/react/cjs/react.development.js:928:20)
      at Icon.setState (node_modules/@expo/vector-icons/src/createIconSet.tsx:133:31)
      at asyncGeneratorStep (node_modules/@babel/runtime/helpers/asyncToGenerator.js:3:17)
      at _next (node_modules/@babel/runtime/helpers/asyncToGenerator.js:17:9)

  console.error
    An update to Icon inside a test was not wrapped in act(...).
    
    When testing, code that causes React state updates should be wrapped into act(...):
    
    act(() => {
      /* fire events that update state */
    });
    /* assert on the output */
    
    This ensures that you're testing the behavior the user would see in the browser. Learn more at https://react.dev/link/wrap-tests-with-act

      at node_modules/react-test-renderer/cjs/react-test-renderer.development.js:11516:19
      at runWithFiberInDEV (node_modules/react-test-renderer/cjs/react-test-renderer.development.js:540:16)
      at warnIfUpdatesNotWrappedWithActDEV (node_modules/react-test-renderer/cjs/react-test-renderer.development.js:11515:9)
      at scheduleUpdateOnFiber (node_modules/react-test-renderer/cjs/react-test-renderer.development.js:10234:9)
      at Object.enqueueSetState (node_modules/react-test-renderer/cjs/react-test-renderer.development.js:13923:14)
      at Icon.Object.<anonymous>.process.env.NODE_ENV.Component.setState (node_modules/react/cjs/react.development.js:928:20)
      at Icon.setState (node_modules/@expo/vector-icons/src/createIconSet.tsx:133:31)
      at asyncGeneratorStep (node_modules/@babel/runtime/helpers/asyncToGenerator.js:3:17)
      at _next (node_modules/@babel/runtime/helpers/asyncToGenerator.js:17:9)

  console.error
    An update to Icon inside a test was not wrapped in act(...).
    
    When testing, code that causes React state updates should be wrapped into act(...):
    
    act(() => {
      /* fire events that update state */
    });
    /* assert on the output */
    
    This ensures that you're testing the behavior the user would see in the browser. Learn more at https://react.dev/link/wrap-tests-with-act

      at node_modules/react-test-renderer/cjs/react-test-renderer.development.js:11516:19
      at runWithFiberInDEV (node_modules/react-test-renderer/cjs/react-test-renderer.development.js:540:16)
      at warnIfUpdatesNotWrappedWithActDEV (node_modules/react-test-renderer/cjs/react-test-renderer.development.js:11515:9)
      at scheduleUpdateOnFiber (node_modules/react-test-renderer/cjs/react-test-renderer.development.js:10234:9)
      at Object.enqueueSetState (node_modules/react-test-renderer/cjs/react-test-renderer.development.js:13923:14)
      at Icon.Object.<anonymous>.process.env.NODE_ENV.Component.setState (node_modules/react/cjs/react.development.js:928:20)
      at Icon.setState (node_modules/@expo/vector-icons/src/createIconSet.tsx:133:31)
      at asyncGeneratorStep (node_modules/@babel/runtime/helpers/asyncToGenerator.js:3:17)
      at _next (node_modules/@babel/runtime/helpers/asyncToGenerator.js:17:9)

  console.error
    An update to Icon inside a test was not wrapped in act(...).
    
    When testing, code that causes React state updates should be wrapped into act(...):
    
    act(() => {
      /* fire events that update state */
    });
    /* assert on the output */
    
    This ensures that you're testing the behavior the user would see in the browser. Learn more at https://react.dev/link/wrap-tests-with-act

      at node_modules/react-test-renderer/cjs/react-test-renderer.development.js:11516:19
      at runWithFiberInDEV (node_modules/react-test-renderer/cjs/react-test-renderer.development.js:540:16)
      at warnIfUpdatesNotWrappedWithActDEV (node_modules/react-test-renderer/cjs/react-test-renderer.development.js:11515:9)
      at scheduleUpdateOnFiber (node_modules/react-test-renderer/cjs/react-test-renderer.development.js:10234:9)
      at Object.enqueueSetState (node_modules/react-test-renderer/cjs/react-test-renderer.development.js:13923:14)
      at Icon.Object.<anonymous>.process.env.NODE_ENV.Component.setState (node_modules/react/cjs/react.development.js:928:20)
      at Icon.setState (node_modules/@expo/vector-icons/src/createIconSet.tsx:133:31)
      at asyncGeneratorStep (node_modules/@babel/runtime/helpers/asyncToGenerator.js:3:17)
      at _next (node_modules/@babel/runtime/helpers/asyncToGenerator.js:17:9)

  console.error
    An update to Icon inside a test was not wrapped in act(...).
    
    When testing, code that causes React state updates should be wrapped into act(...):
    
    act(() => {
      /* fire events that update state */
    });
    /* assert on the output */
    
    This ensures that you're testing the behavior the user would see in the browser. Learn more at https://react.dev/link/wrap-tests-with-act

      at node_modules/react-test-renderer/cjs/react-test-renderer.development.js:11516:19
      at runWithFiberInDEV (node_modules/react-test-renderer/cjs/react-test-renderer.development.js:540:16)
      at warnIfUpdatesNotWrappedWithActDEV (node_modules/react-test-renderer/cjs/react-test-renderer.development.js:11515:9)
      at scheduleUpdateOnFiber (node_modules/react-test-renderer/cjs/react-test-renderer.development.js:10234:9)
      at Object.enqueueSetState (node_modules/react-test-renderer/cjs/react-test-renderer.development.js:13923:14)
      at Icon.Object.<anonymous>.process.env.NODE_ENV.Component.setState (node_modules/react/cjs/react.development.js:928:20)
      at Icon.setState (node_modules/@expo/vector-icons/src/createIconSet.tsx:133:31)
      at asyncGeneratorStep (node_modules/@babel/runtime/helpers/asyncToGenerator.js:3:17)
      at _next (node_modules/@babel/runtime/helpers/asyncToGenerator.js:17:9)

  console.error
    An update to Icon inside a test was not wrapped in act(...).
    
    When testing, code that causes React state updates should be wrapped into act(...):
    
    act(() => {
      /* fire events that update state */
    });
    /* assert on the output */
    
    This ensures that you're testing the behavior the user would see in the browser. Learn more at https://react.dev/link/wrap-tests-with-act

      at node_modules/react-test-renderer/cjs/react-test-renderer.development.js:11516:19
      at runWithFiberInDEV (node_modules/react-test-renderer/cjs/react-test-renderer.development.js:540:16)
      at warnIfUpdatesNotWrappedWithActDEV (node_modules/react-test-renderer/cjs/react-test-renderer.development.js:11515:9)
      at scheduleUpdateOnFiber (node_modules/react-test-renderer/cjs/react-test-renderer.development.js:10234:9)
      at Object.enqueueSetState (node_modules/react-test-renderer/cjs/react-test-renderer.development.js:13923:14)
      at Icon.Object.<anonymous>.process.env.NODE_ENV.Component.setState (node_modules/react/cjs/react.development.js:928:20)
      at Icon.setState (node_modules/@expo/vector-icons/src/createIconSet.tsx:133:31)
      at asyncGeneratorStep (node_modules/@babel/runtime/helpers/asyncToGenerator.js:3:17)
      at _next (node_modules/@babel/runtime/helpers/asyncToGenerator.js:17:9)

  console.error
    An update to Icon inside a test was not wrapped in act(...).
    
    When testing, code that causes React state updates should be wrapped into act(...):
    
    act(() => {
      /* fire events that update state */
    });
    /* assert on the output */
    
    This ensures that you're testing the behavior the user would see in the browser. Learn more at https://react.dev/link/wrap-tests-with-act

      at node_modules/react-test-renderer/cjs/react-test-renderer.development.js:11516:19
      at runWithFiberInDEV (node_modules/react-test-renderer/cjs/react-test-renderer.development.js:540:16)
      at warnIfUpdatesNotWrappedWithActDEV (node_modules/react-test-renderer/cjs/react-test-renderer.development.js:11515:9)
      at scheduleUpdateOnFiber (node_modules/react-test-renderer/cjs/react-test-renderer.development.js:10234:9)
      at Object.enqueueSetState (node_modules/react-test-renderer/cjs/react-test-renderer.development.js:13923:14)
      at Icon.Object.<anonymous>.process.env.NODE_ENV.Component.setState (node_modules/react/cjs/react.development.js:928:20)
      at Icon.setState (node_modules/@expo/vector-icons/src/createIconSet.tsx:133:31)
      at asyncGeneratorStep (node_modules/@babel/runtime/helpers/asyncToGenerator.js:3:17)
      at _next (node_modules/@babel/runtime/helpers/asyncToGenerator.js:17:9)

  console.error
    An update to Icon inside a test was not wrapped in act(...).
    
    When testing, code that causes React state updates should be wrapped into act(...):
    
    act(() => {
      /* fire events that update state */
    });
    /* assert on the output */
    
    This ensures that you're testing the behavior the user would see in the browser. Learn more at https://react.dev/link/wrap-tests-with-act

      at node_modules/react-test-renderer/cjs/react-test-renderer.development.js:11516:19
      at runWithFiberInDEV (node_modules/react-test-renderer/cjs/react-test-renderer.development.js:540:16)
      at warnIfUpdatesNotWrappedWithActDEV (node_modules/react-test-renderer/cjs/react-test-renderer.development.js:11515:9)
      at scheduleUpdateOnFiber (node_modules/react-test-renderer/cjs/react-test-renderer.development.js:10234:9)
      at Object.enqueueSetState (node_modules/react-test-renderer/cjs/react-test-renderer.development.js:13923:14)
      at Icon.Object.<anonymous>.process.env.NODE_ENV.Component.setState (node_modules/react/cjs/react.development.js:928:20)
      at Icon.setState (node_modules/@expo/vector-icons/src/createIconSet.tsx:133:31)
      at asyncGeneratorStep (node_modules/@babel/runtime/helpers/asyncToGenerator.js:3:17)
      at _next (node_modules/@babel/runtime/helpers/asyncToGenerator.js:17:9)

  console.error
    An update to Icon inside a test was not wrapped in act(...).
    
    When testing, code that causes React state updates should be wrapped into act(...):
    
    act(() => {
      /* fire events that update state */
    });
    /* assert on the output */
    
    This ensures that you're testing the behavior the user would see in the browser. Learn more at https://react.dev/link/wrap-tests-with-act

      at node_modules/react-test-renderer/cjs/react-test-renderer.development.js:11516:19
      at runWithFiberInDEV (node_modules/react-test-renderer/cjs/react-test-renderer.development.js:540:16)
      at warnIfUpdatesNotWrappedWithActDEV (node_modules/react-test-renderer/cjs/react-test-renderer.development.js:11515:9)
      at scheduleUpdateOnFiber (node_modules/react-test-renderer/cjs/react-test-renderer.development.js:10234:9)
      at Object.enqueueSetState (node_modules/react-test-renderer/cjs/react-test-renderer.development.js:13923:14)
      at Icon.Object.<anonymous>.process.env.NODE_ENV.Component.setState (node_modules/react/cjs/react.development.js:928:20)
      at Icon.setState (node_modules/@expo/vector-icons/src/createIconSet.tsx:133:31)
      at asyncGeneratorStep (node_modules/@babel/runtime/helpers/asyncToGenerator.js:3:17)
      at _next (node_modules/@babel/runtime/helpers/asyncToGenerator.js:17:9)

  console.error
    An update to Icon inside a test was not wrapped in act(...).
    
    When testing, code that causes React state updates should be wrapped into act(...):
    
    act(() => {
      /* fire events that update state */
    });
    /* assert on the output */
    
    This ensures that you're testing the behavior the user would see in the browser. Learn more at https://react.dev/link/wrap-tests-with-act

      at node_modules/react-test-renderer/cjs/react-test-renderer.development.js:11516:19
      at runWithFiberInDEV (node_modules/react-test-renderer/cjs/react-test-renderer.development.js:540:16)
      at warnIfUpdatesNotWrappedWithActDEV (node_modules/react-test-renderer/cjs/react-test-renderer.development.js:11515:9)
      at scheduleUpdateOnFiber (node_modules/react-test-renderer/cjs/react-test-renderer.development.js:10234:9)
      at Object.enqueueSetState (node_modules/react-test-renderer/cjs/react-test-renderer.development.js:13923:14)
      at Icon.Object.<anonymous>.process.env.NODE_ENV.Component.setState (node_modules/react/cjs/react.development.js:928:20)
      at Icon.setState (node_modules/@expo/vector-icons/src/createIconSet.tsx:133:31)
      at asyncGeneratorStep (node_modules/@babel/runtime/helpers/asyncToGenerator.js:3:17)
      at _next (node_modules/@babel/runtime/helpers/asyncToGenerator.js:17:9)

  console.error
    An update to Icon inside a test was not wrapped in act(...).
    
    When testing, code that causes React state updates should be wrapped into act(...):
    
    act(() => {
      /* fire events that update state */
    });
    /* assert on the output */
    
    This ensures that you're testing the behavior the user would see in the browser. Learn more at https://react.dev/link/wrap-tests-with-act

      at node_modules/react-test-renderer/cjs/react-test-renderer.development.js:11516:19
      at runWithFiberInDEV (node_modules/react-test-renderer/cjs/react-test-renderer.development.js:540:16)
      at warnIfUpdatesNotWrappedWithActDEV (node_modules/react-test-renderer/cjs/react-test-renderer.development.js:11515:9)
      at scheduleUpdateOnFiber (node_modules/react-test-renderer/cjs/react-test-renderer.development.js:10234:9)
      at Object.enqueueSetState (node_modules/react-test-renderer/cjs/react-test-renderer.development.js:13923:14)
      at Icon.Object.<anonymous>.process.env.NODE_ENV.Component.setState (node_modules/react/cjs/react.development.js:928:20)
      at Icon.setState (node_modules/@expo/vector-icons/src/createIconSet.tsx:133:31)
      at asyncGeneratorStep (node_modules/@babel/runtime/helpers/asyncToGenerator.js:3:17)
      at _next (node_modules/@babel/runtime/helpers/asyncToGenerator.js:17:9)

  console.error
    An update to Icon inside a test was not wrapped in act(...).
    
    When testing, code that causes React state updates should be wrapped into act(...):
    
    act(() => {
      /* fire events that update state */
    });
    /* assert on the output */
    
    This ensures that you're testing the behavior the user would see in the browser. Learn more at https://react.dev/link/wrap-tests-with-act

      at node_modules/react-test-renderer/cjs/react-test-renderer.development.js:11516:19
      at runWithFiberInDEV (node_modules/react-test-renderer/cjs/react-test-renderer.development.js:540:16)
      at warnIfUpdatesNotWrappedWithActDEV (node_modules/react-test-renderer/cjs/react-test-renderer.development.js:11515:9)
      at scheduleUpdateOnFiber (node_modules/react-test-renderer/cjs/react-test-renderer.development.js:10234:9)
      at Object.enqueueSetState (node_modules/react-test-renderer/cjs/react-test-renderer.development.js:13923:14)
      at Icon.Object.<anonymous>.process.env.NODE_ENV.Component.setState (node_modules/react/cjs/react.development.js:928:20)
      at Icon.setState (node_modules/@expo/vector-icons/src/createIconSet.tsx:133:31)
      at asyncGeneratorStep (node_modules/@babel/runtime/helpers/asyncToGenerator.js:3:17)
      at _next (node_modules/@babel/runtime/helpers/asyncToGenerator.js:17:9)

  console.error
    An update to Icon inside a test was not wrapped in act(...).
    
    When testing, code that causes React state updates should be wrapped into act(...):
    
    act(() => {
      /* fire events that update state */
    });
    /* assert on the output */
    
    This ensures that you're testing the behavior the user would see in the browser. Learn more at https://react.dev/link/wrap-tests-with-act

      at node_modules/react-test-renderer/cjs/react-test-renderer.development.js:11516:19
      at runWithFiberInDEV (node_modules/react-test-renderer/cjs/react-test-renderer.development.js:540:16)
      at warnIfUpdatesNotWrappedWithActDEV (node_modules/react-test-renderer/cjs/react-test-renderer.development.js:11515:9)
      at scheduleUpdateOnFiber (node_modules/react-test-renderer/cjs/react-test-renderer.development.js:10234:9)
      at Object.enqueueSetState (node_modules/react-test-renderer/cjs/react-test-renderer.development.js:13923:14)
      at Icon.Object.<anonymous>.process.env.NODE_ENV.Component.setState (node_modules/react/cjs/react.development.js:928:20)
      at Icon.setState (node_modules/@expo/vector-icons/src/createIconSet.tsx:133:31)
      at asyncGeneratorStep (node_modules/@babel/runtime/helpers/asyncToGenerator.js:3:17)
      at _next (node_modules/@babel/runtime/helpers/asyncToGenerator.js:17:9)

  console.error
    An update to TrucksScreen inside a test was not wrapped in act(...).
    
    When testing, code that causes React state updates should be wrapped into act(...):
    
    act(() => {
      /* fire events that update state */
    });
    /* assert on the output */
    
    This ensures that you're testing the behavior the user would see in the browser. Learn more at https://react.dev/link/wrap-tests-with-act

    [0m [90m 214 |[39m           style[33m:[39m [32m'destructive'[39m[33m,[39m
     [90m 215 |[39m           onPress[33m:[39m () [33m=>[39m {
    [31m[1m>[22m[39m[90m 216 |[39m             setVehicles(vehicles[33m.[39mfilter(v [33m=>[39m v[33m.[39mid [33m!==[39m vehicle[33m.[39mid))
     [90m     |[39m             [31m[1m^[22m[39m
     [90m 217 |[39m           }[33m,[39m
     [90m 218 |[39m         }[33m,[39m
     [90m 219 |[39m       ][0m

      at node_modules/react-test-renderer/cjs/react-test-renderer.development.js:11516:19
      at runWithFiberInDEV (node_modules/react-test-renderer/cjs/react-test-renderer.development.js:540:16)
      at warnIfUpdatesNotWrappedWithActDEV (node_modules/react-test-renderer/cjs/react-test-renderer.development.js:11515:9)
      at scheduleUpdateOnFiber (node_modules/react-test-renderer/cjs/react-test-renderer.development.js:10234:9)
      at dispatchSetStateInternal (node_modules/react-test-renderer/cjs/react-test-renderer.development.js:4898:13)
      at dispatchSetState (node_modules/react-test-renderer/cjs/react-test-renderer.development.js:4852:7)
      at Object.setVehicles [as onPress] (src/screens/business/trucksScreen.tsx:216:13)
      at Object.onPress (__tests__/screens/TrucksScreen.test.tsx:366:21)

node.exe : FAIL __tests__/screens/TrucksScreen.test.tsx (14.736 s)
Au caractère C:\Users\romai\AppData\Local\fnm_multishells\27716_1761134564789\npm.ps1:16 : 5
+     & "$basedir/node$exe"  "$basedir/node_modules/npm/bin/npm-cli.js" ...
+     ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
    + CategoryInfo          : NotSpecified: (FAIL __tests__/....tsx (14.736 s):String) [], RemoteException
    + FullyQualifiedErrorId : NativeCommandError
 
  TrucksScreen
    Initial Rendering
      ÔêÜ should render the screen without crashing (2350 ms)
      ├ù should display statistics cards (73 ms)
      ├ù should display correct vehicle counts in statistics (105 ms)
      ÔêÜ should display mock vehicles (101 ms)
    Type Filters
      ÔêÜ should display type filter section (85 ms)
      ├ù should display all vehicle type filters (81 ms)
      ├ù should filter vehicles by Moving Truck type (72 ms)
      ├ù should filter vehicles by Van type (86 ms)
      ├ù should filter vehicles by Trailer type (100 ms)
      ├ù should filter vehicles by Ute type (119 ms)
      ├ù should show all vehicles when "All" filter is selected (107 ms)
      ÔêÜ should display vehicle count for each type filter (101 ms)
    Status Filters
      ÔêÜ should display status filter section (87 ms)
      ├ù should display all status filters (92 ms)
      ├ù should filter vehicles by Available status (105 ms)
      ├ù should filter vehicles by In Use status (97 ms)
      ├ù should filter vehicles by Maintenance status (151 ms)
      ├ù should combine type and status filters (115 ms)
    Vehicle Cards
      ├ù should display vehicle emoji icons (109 ms)
      ÔêÜ should display vehicle registration numbers (119 ms)
      ÔêÜ should display vehicle make and year (97 ms)
      ÔêÜ should display vehicle capacity when available (136 ms)
      ├ù should display vehicle location (92 ms)
      ÔêÜ should display next service date (105 ms)
      ÔêÜ should display assigned staff when vehicle is in use (94 ms)
      ├ù should display status badges with correct colors (91 ms)
    Vehicle Actions
      ÔêÜ should have Edit button for each vehicle (98 ms)
      ÔêÜ should have Delete button for each vehicle (81 ms)
      ├ù should show alert when Edit button is pressed (206 ms)
      ÔêÜ should show confirmation alert when Delete button is pressed (132 ms)
      ├ù should remove vehicle from list when delete is confirmed (1541 ms)
      ├ù should open vehicle card detail when pressed (134 ms)
    Add Vehicle Modal
      ÔêÜ should have Add Vehicle button (118 ms)
      ├ù should open AddVehicleModal when Add Vehicle button is pressed (150 ms)
      ├ù should add new vehicle to list when form is submitted (127 ms)
      ├ù should update statistics after adding a vehicle (135 ms)
      ├ù should close modal after adding vehicle (113 ms)
    Pull to Refresh
      ÔêÜ should have RefreshControl (67 ms)
    Empty State
      ÔêÜ should show empty state when no vehicles match filters (78 ms)
      ÔêÜ should show empty state icon (86 ms)
      ├ù should show empty state message when all vehicles are filtered out (63 ms)
    Responsive Design
      ├ù should display statistics in a row layout (57 ms)
      ├ù should display type filters in horizontal scroll (57 ms)
      ÔêÜ should display vehicle cards in vertical list (59 ms)
    Integration
      ├ù should maintain filter state when adding a vehicle (54 ms)
      ├ù should update Available count when adding an available vehicle (79 ms)
      ├ù should handle multiple filter changes smoothly (53 ms)

  ÔùÅ TrucksScreen ÔÇ║ Initial Rendering ÔÇ║ should display statistics cards

    Found multiple elements with text: Available

    [0m [90m 35 |[39m       
     [90m 36 |[39m       expect(getByText([32m'Total'[39m))[33m.[39mtoBeTruthy()
    [31m[1m>[22m[39m[90m 37 |[39m       expect(getByText([32m'Available'[39m))[33m.[39mtoBeTruthy()
     [90m    |[39m              [31m[1m^[22m[39m
     [90m 38 |[39m       expect(getByText([32m'In Use'[39m))[33m.[39mtoBeTruthy()
     [90m 39 |[39m       expect(getByText([32m'Maintenance'[39m))[33m.[39mtoBeTruthy()
     [90m 40 |[39m     })[0m

      at Object.getByText (__tests__/screens/TrucksScreen.test.tsx:37:14)

  ÔùÅ TrucksScreen ÔÇ║ Initial Rendering ÔÇ║ should display correct vehicle counts in statistics

    Found multiple elements with text: 1

    [0m [90m 46 |[39m       expect(getByText([32m'4'[39m))[33m.[39mtoBeTruthy() [90m// Total[39m
     [90m 47 |[39m       expect(getByText([32m'2'[39m))[33m.[39mtoBeTruthy() [90m// Available (v1, v3)[39m
    [31m[1m>[22m[39m[90m 48 |[39m       expect(getByText([32m'1'[39m))[33m.[39mtoBeTruthy() [90m// In Use 
(v2)[39m
     [90m    |[39m              [31m[1m^[22m[39m
     [90m 49 |[39m       expect(getByText([32m'1'[39m))[33m.[39mtoBeTruthy() [90m// Maintenance (v4)[39m
     [90m 50 |[39m     })
     [90m 51 |[39m[0m

      at Object.getByText (__tests__/screens/TrucksScreen.test.tsx:48:14)

  ÔùÅ TrucksScreen ÔÇ║ Type Filters ÔÇ║ should display all vehicle type filters

    Found multiple elements with text: /All/

    [0m [90m 73 |[39m       [36mconst[39m { getByText } [33m=[39m 
renderWithTheme([33m<[39m[33mTrucksScreen[39m [33m/[39m[33m>[39m)
     [90m 74 |[39m       
    [31m[1m>[22m[39m[90m 75 |[39m       expect(getByText([35m/All/[39m))[33m.[39mtoBeTruthy()
     [90m    |[39m              [31m[1m^[22m[39m
     [90m 76 |[39m       expect(getByText([32m'Moving Truck'[39m))[33m.[39mtoBeTruthy()
     [90m 77 |[39m       expect(getByText([32m'Van'[39m))[33m.[39mtoBeTruthy()
     [90m 78 |[39m       expect(getByText([32m'Trailer'[39m))[33m.[39mtoBeTruthy()[0m

      at Object.getByText (__tests__/screens/TrucksScreen.test.tsx:75:14)

  ÔùÅ TrucksScreen ÔÇ║ Type Filters ÔÇ║ should filter vehicles by Moving Truck type

    Found multiple elements with text: Moving Truck

    [0m [90m 86 |[39m       
     [90m 87 |[39m       [90m// Cliquer sur le filtre Moving Truck[39m
    [31m[1m>[22m[39m[90m 88 |[39m       [36mconst[39m truckFilter [33m=[39m getByText([32m'Moving 
Truck'[39m)
     [90m    |[39m                           [31m[1m^[22m[39m
     [90m 89 |[39m       fireEvent[33m.[39mpress(truckFilter)
     [90m 90 |[39m       
     [90m 91 |[39m       [90m// Devrait afficher seulement Isuzu NPR 200[39m[0m

      at Object.getByText (__tests__/screens/TrucksScreen.test.tsx:88:27)

  ÔùÅ TrucksScreen ÔÇ║ Type Filters ÔÇ║ should filter vehicles by Van type

    Found multiple elements with text: Van

    [0m [90m  99 |[39m       [36mconst[39m { getByText[33m,[39m queryByText } [33m=[39m 
renderWithTheme([33m<[39m[33mTrucksScreen[39m [33m/[39m[33m>[39m)
     [90m 100 |[39m       
    [31m[1m>[22m[39m[90m 101 |[39m       [36mconst[39m vanFilter [33m=[39m getByText([32m'Van'[39m)
     [90m     |[39m                         [31m[1m^[22m[39m
     [90m 102 |[39m       fireEvent[33m.[39mpress(vanFilter)
     [90m 103 |[39m       
     [90m 104 |[39m       [90m// Devrait afficher seulement Ford Transit[39m[0m

      at Object.getByText (__tests__/screens/TrucksScreen.test.tsx:101:25)

  ÔùÅ TrucksScreen ÔÇ║ Type Filters ÔÇ║ should filter vehicles by Trailer type

    Found multiple elements with text: Trailer

    [0m [90m 112 |[39m       [36mconst[39m { getByText[33m,[39m queryByText } [33m=[39m 
renderWithTheme([33m<[39m[33mTrucksScreen[39m [33m/[39m[33m>[39m)
     [90m 113 |[39m       
    [31m[1m>[22m[39m[90m 114 |[39m       [36mconst[39m trailerFilter [33m=[39m 
getByText([32m'Trailer'[39m)
     [90m     |[39m                             [31m[1m^[22m[39m
     [90m 115 |[39m       fireEvent[33m.[39mpress(trailerFilter)
     [90m 116 |[39m       
     [90m 117 |[39m       expect(getByText([32m'Box Trailer'[39m))[33m.[39mtoBeTruthy()[0m

      at Object.getByText (__tests__/screens/TrucksScreen.test.tsx:114:29)

  ÔùÅ TrucksScreen ÔÇ║ Type Filters ÔÇ║ should filter vehicles by Ute type

    Found multiple elements with text: Ute

    [0m [90m 124 |[39m       [36mconst[39m { getByText[33m,[39m queryByText } [33m=[39m 
renderWithTheme([33m<[39m[33mTrucksScreen[39m [33m/[39m[33m>[39m)
     [90m 125 |[39m       
    [31m[1m>[22m[39m[90m 126 |[39m       [36mconst[39m uteFilter [33m=[39m getByText([32m'Ute'[39m)
     [90m     |[39m                         [31m[1m^[22m[39m
     [90m 127 |[39m       fireEvent[33m.[39mpress(uteFilter)
     [90m 128 |[39m       
     [90m 129 |[39m       expect(getByText([32m'Toyota HiLux'[39m))[33m.[39mtoBeTruthy()[0m

      at Object.getByText (__tests__/screens/TrucksScreen.test.tsx:126:25)

  ÔùÅ TrucksScreen ÔÇ║ Type Filters ÔÇ║ should show all vehicles when "All" filter is selected

    Found multiple elements with text: Van

    [0m [90m 137 |[39m       
     [90m 138 |[39m       [90m// Filtrer d'abord par un type[39m
    [31m[1m>[22m[39m[90m 139 |[39m       fireEvent[33m.[39mpress(getByText([32m'Van'[39m))
     [90m     |[39m                       [31m[1m^[22m[39m
     [90m 140 |[39m       
     [90m 141 |[39m       [90m// Puis cliquer sur "All"[39m
     [90m 142 |[39m       [36mconst[39m allFilter [33m=[39m getByText([35m/All \(4\)/[39m)[0m

      at Object.getByText (__tests__/screens/TrucksScreen.test.tsx:139:23)

  ÔùÅ TrucksScreen ÔÇ║ Status Filters ÔÇ║ should display all status filters

    Found multiple elements with text: Available

    [0m [90m 171 |[39m       [36mconst[39m { getByText } [33m=[39m 
renderWithTheme([33m<[39m[33mTrucksScreen[39m [33m/[39m[33m>[39m)
     [90m 172 |[39m       
    [31m[1m>[22m[39m[90m 173 |[39m       expect(getByText([32m'Available'[39m))[33m.[39mtoBeTruthy()
     [90m     |[39m              [31m[1m^[22m[39m
     [90m 174 |[39m       expect(getByText([32m'In Use'[39m))[33m.[39mtoBeTruthy()
     [90m 175 |[39m       expect(getByText([32m'Maintenance'[39m))[33m.[39mtoBeTruthy()
     [90m 176 |[39m       expect(getByText([32m'Out of Service'[39m))[33m.[39mtoBeTruthy()[0m

      at Object.getByText (__tests__/screens/TrucksScreen.test.tsx:173:14)

  ÔùÅ TrucksScreen ÔÇ║ Status Filters ÔÇ║ should filter vehicles by Available status

    Found multiple elements with text: Available

    [0m [90m 181 |[39m       
     [90m 182 |[39m       [90m// Cliquer sur Available[39m
    [31m[1m>[22m[39m[90m 183 |[39m       [36mconst[39m availableFilters [33m=[39m 
getByText([32m'Available'[39m)
     [90m     |[39m                                [31m[1m^[22m[39m
     [90m 184 |[39m       fireEvent[33m.[39mpress(availableFilters)
     [90m 185 |[39m       
     [90m 186 |[39m       [90m// Devrait afficher Isuzu et Box Trailer[39m[0m

      at Object.getByText (__tests__/screens/TrucksScreen.test.tsx:183:32)

  ÔùÅ TrucksScreen ÔÇ║ Status Filters ÔÇ║ should filter vehicles by In Use status

    Found multiple elements with text: In Use

    [0m [90m 194 |[39m       [36mconst[39m { getByText[33m,[39m queryByText } [33m=[39m 
renderWithTheme([33m<[39m[33mTrucksScreen[39m [33m/[39m[33m>[39m)
     [90m 195 |[39m       
    [31m[1m>[22m[39m[90m 196 |[39m       [36mconst[39m inUseFilter [33m=[39m getByText([32m'In Use'[39m)
     [90m     |[39m                           [31m[1m^[22m[39m
     [90m 197 |[39m       fireEvent[33m.[39mpress(inUseFilter)
     [90m 198 |[39m       
     [90m 199 |[39m       expect(getByText([32m'Ford Transit'[39m))[33m.[39mtoBeTruthy()[0m

      at Object.getByText (__tests__/screens/TrucksScreen.test.tsx:196:27)

  ÔùÅ TrucksScreen ÔÇ║ Status Filters ÔÇ║ should filter vehicles by Maintenance status

    Found multiple elements with text: Maintenance

    [0m [90m 206 |[39m       [36mconst[39m { getByText[33m,[39m queryByText } [33m=[39m 
renderWithTheme([33m<[39m[33mTrucksScreen[39m [33m/[39m[33m>[39m)
     [90m 207 |[39m       
    [31m[1m>[22m[39m[90m 208 |[39m       [36mconst[39m maintenanceFilter [33m=[39m 
getByText([32m'Maintenance'[39m)
     [90m     |[39m                                 [31m[1m^[22m[39m
     [90m 209 |[39m       fireEvent[33m.[39mpress(maintenanceFilter)
     [90m 210 |[39m       
     [90m 211 |[39m       expect(getByText([32m'Toyota HiLux'[39m))[33m.[39mtoBeTruthy()[0m

      at Object.getByText (__tests__/screens/TrucksScreen.test.tsx:208:33)

  ÔùÅ TrucksScreen ÔÇ║ Status Filters ÔÇ║ should combine type and status filters

    Found multiple elements with text: Moving Truck

    [0m [90m 219 |[39m       
     [90m 220 |[39m       [90m// Filtrer par Moving Truck + Available[39m
    [31m[1m>[22m[39m[90m 221 |[39m       fireEvent[33m.[39mpress(getByText([32m'Moving Truck'[39m))
     [90m     |[39m                       [31m[1m^[22m[39m
     [90m 222 |[39m       fireEvent[33m.[39mpress(getByText([32m'Available'[39m))
     [90m 223 |[39m       
     [90m 224 |[39m       [90m// Devrait afficher seulement Isuzu (moving-truck + available)[39m[0m

      at Object.getByText (__tests__/screens/TrucksScreen.test.tsx:221:23)

  ÔùÅ TrucksScreen ÔÇ║ Vehicle Cards ÔÇ║ should display vehicle emoji icons

    Found multiple elements with text: ­ƒÜø

    [0m [90m 237 |[39m       [36mconst[39m { getByText } [33m=[39m 
renderWithTheme([33m<[39m[33mTrucksScreen[39m [33m/[39m[33m>[39m)
     [90m 238 |[39m       
    [31m[1m>[22m[39m[90m 239 |[39m       expect(getByText([32m'ƒÜø'[39m))[33m.[39mtoBeTruthy() [90m// 
Moving Truck[39m
     [90m     |[39m              [31m[1m^[22m[39m
     [90m 240 |[39m       expect(getByText([32m'­ƒÜÉ'[39m))[33m.[39mtoBeTruthy() [90m// Van[39m
     [90m 241 |[39m       expect(getByText([32m'­ƒÜ£'[39m))[33m.[39mtoBeTruthy() [90m// Trailer[39m
     [90m 242 |[39m       expect(getByText([32m'­ƒø╗'[39m))[33m.[39mtoBeTruthy() [90m// Ute[39m[0m

      at Object.getByText (__tests__/screens/TrucksScreen.test.tsx:239:14)

  ÔùÅ TrucksScreen ÔÇ║ Vehicle Cards ÔÇ║ should display vehicle location

    Found multiple elements with text: Sydney Depot

    [0m [90m 273 |[39m       [36mconst[39m { getByText } [33m=[39m 
renderWithTheme([33m<[39m[33mTrucksScreen[39m [33m/[39m[33m>[39m)
     [90m 274 |[39m       
    [31m[1m>[22m[39m[90m 275 |[39m       expect(getByText([32m'Sydney Depot'[39m))[33m.[39mtoBeTruthy()
     [90m     |[39m              [31m[1m^[22m[39m
     [90m 276 |[39m       expect(getByText([32m'Melbourne Branch'[39m))[33m.[39mtoBeTruthy()
     [90m 277 |[39m     })
     [90m 278 |[39m[0m

      at Object.getByText (__tests__/screens/TrucksScreen.test.tsx:275:14)

  ÔùÅ TrucksScreen ÔÇ║ Vehicle Cards ÔÇ║ should display status badges with correct colors

    Found multiple elements with text: Available

    [0m [90m 296 |[39m       
     [90m 297 |[39m       [90m// Les badges de statut devraient ├¬tre visibles[39m
    [31m[1m>[22m[39m[90m 298 |[39m       [36mconst[39m availableBadges [33m=[39m 
getByText([32m'Available'[39m)
     [90m     |[39m                               [31m[1m^[22m[39m
     [90m 299 |[39m       expect(availableBadges)[33m.[39mtoBeTruthy()
     [90m 300 |[39m       
     [90m 301 |[39m       [36mconst[39m inUseBadge [33m=[39m getByText([32m'In Use'[39m)[0m

      at Object.getByText (__tests__/screens/TrucksScreen.test.tsx:298:31)

  ÔùÅ TrucksScreen ÔÇ║ Vehicle Actions ÔÇ║ should show alert when Edit button is pressed

    expect(jest.fn()).toHaveBeenCalledWith(...expected)

    Expected: "Modifier le v├®hicule", StringContaining "Modification de"

    Number of calls: 0

    [0m [90m 331 |[39m       fireEvent[33m.[39mpress(editButtons[[35m0[39m])
     [90m 332 |[39m       
    [31m[1m>[22m[39m[90m 333 |[39m       expect([33mAlert[39m[33m.[39malert)[33m.[39mtoHaveBeenCalledWith(
     [90m     |[39m                           [31m[1m^[22m[39m
     [90m 334 |[39m         [32m'Modifier le v├®hicule'[39m[33m,[39m
     [90m 335 |[39m         expect[33m.[39mstringContaining([32m'Modification de'[39m)
     [90m 336 |[39m       )[0m

      at Object.toHaveBeenCalledWith (__tests__/screens/TrucksScreen.test.tsx:333:27)

  ÔùÅ TrucksScreen ÔÇ║ Vehicle Actions ÔÇ║ should remove vehicle from list when delete is confirmed

    Unable to find node on an unmounted component.

    [0m [90m 367 |[39m       
     [90m 368 |[39m       [90m// Le v├®hicule ne devrait plus ├¬tre visible[39m
    [31m[1m>[22m[39m[90m 369 |[39m       waitFor(() [33m=>[39m {
     [90m     |[39m              [31m[1m^[22m[39m
     [90m 370 |[39m         expect(queryByText(vehicleName))[33m.[39mtoBeNull()
     [90m 371 |[39m       })
     [90m 372 |[39m     })[0m

      at Object.<anonymous> (__tests__/screens/TrucksScreen.test.tsx:369:14)

  ÔùÅ TrucksScreen ÔÇ║ Vehicle Actions ÔÇ║ should open vehicle card detail when pressed

    expect(jest.fn()).toHaveBeenCalled()

    Expected number of calls: >= 1
    Received number of calls:    0

    [0m [90m 379 |[39m       
     [90m 380 |[39m       [90m// Devrait ouvrir un modal ou naviguer (pour l'instant, d├®clenche handleEdit)[39m
    [31m[1m>[22m[39m[90m 381 |[39m       expect([33mAlert[39m[33m.[39malert)[33m.[39mtoHaveBeenCalled()
     [90m     |[39m                           [31m[1m^[22m[39m
     [90m 382 |[39m     })
     [90m 383 |[39m   })
     [90m 384 |[39m[0m

      at Object.toHaveBeenCalled (__tests__/screens/TrucksScreen.test.tsx:381:27)

  ÔùÅ TrucksScreen ÔÇ║ Add Vehicle Modal ÔÇ║ should open AddVehicleModal when Add Vehicle button is pressed

    Unable to find an element with text: Select vehicle type

    [36m<View>[39m
      [36m<RCTScrollView>[39m
        [36m<RCTRefreshControl />[39m
        [36m<View>[39m
          [36m<View>[39m
            [36m<View>[39m
              [36m<Text>[39m
                [0m¯½ó[0m
              [36m</Text>[39m
              [36m<Text>[39m
                [0m4[0m
              [36m</Text>[39m
              [36m<Text>[39m
                [0mTotal[0m
              [36m</Text>[39m
            [36m</View>[39m
            [36m<View>[39m
              [36m<Text>[39m
                [0m¯¼ƒ[0m
              [36m</Text>[39m
              [36m<Text>[39m
                [0m2[0m
              [36m</Text>[39m
              [36m<Text>[39m
                [0mAvailable[0m
              [36m</Text>[39m
            [36m</View>[39m
            [36m<View>[39m
              [36m<Text>[39m
                [0m¯╗×[0m
              [36m</Text>[39m
              [36m<Text>[39m
                [0m1[0m
              [36m</Text>[39m
              [36m<Text>[39m
                [0mIn Use[0m
              [36m</Text>[39m
            [36m</View>[39m
            [36m<View>[39m
              [36m<Text>[39m
                [0m¯«ç[0m
              [36m</Text>[39m
              [36m<Text>[39m
                [0m1[0m
              [36m</Text>[39m
              [36m<Text>[39m
                [0mMaintenance[0m
              [36m</Text>[39m
            [36m</View>[39m
          [36m</View>[39m
          [36m<View>[39m
            [36m<View[39m
              [33maccessible[39m=[32m{true}[39m
            [36m>[39m
              [36m<Text>[39m
                [0m¯¿à[0m
              [36m</Text>[39m
              [36m<Text>[39m
                [0mAdd Vehicle[0m
              [36m</Text>[39m
            [36m</View>[39m
            [36m<View[39m
              [33maccessible[39m=[32m{true}[39m
            [36m>[39m
              [36m<Text>[39m
                [0m¯╣│[0m
              [36m</Text>[39m
            [36m</View>[39m
          [36m</View>[39m
          [36m<View>[39m
            [36m<Text>[39m
              [0m¯╣á[0m
            [36m</Text>[39m
            [36m<TextInput[39m
              [33mplaceholder[39m=[32m"Search vehicles..."[39m
              [33mvalue[39m=[32m""[39m
            [36m/>[39m
          [36m</View>[39m
          [36m<View>[39m
            [36m<Text>[39m
              [0mSort by[0m
            [36m</Text>[39m
            [36m<View>[39m
              [36m<View[39m
                [33maccessible[39m=[32m{true}[39m
              [36m>[39m
                [36m<Text>[39m
                  [0m¯╗î[0m
                [36m</Text>[39m
                [36m<Text>[39m
                  [0mName[0m
                [36m</Text>[39m
                [36m<Text>[39m
                  [0m¯®å[0m
                [36m</Text>[39m
              [36m</View>[39m
              [36m<View[39m
                [33maccessible[39m=[32m{true}[39m
              [36m>[39m
                [36m<Text>[39m
                  [0m¯½É[0m
                [36m</Text>[39m
                [36m<Text>[39m
                  [0mYear[0m
                [36m</Text>[39m
              [36m</View>[39m
              [36m<View[39m
                [33maccessible[39m=[32m{true}[39m
              [36m>[39m
                [36m<Text>[39m
                  [0m¯¬¥[0m
                [36m</Text>[39m
                [36m<Text>[39m
                  [0mService[0m
                [36m</Text>[39m
              [36m</View>[39m
              [36m<View[39m
                [33maccessible[39m=[32m{true}[39m
              [36m>[39m
                [36m<Text>[39m
                  [0m¯│à[0m
                [36m</Text>[39m
                [36m<Text>[39m
                  [0mLocation[0m
                [36m</Text>[39m
              [36m</View>[39m
            [36m</View>[39m
          [36m</View>[39m
          [36m<View>[39m
            [36m<Text>[39m
              [0mFilter by Type[0m
            [36m</Text>[39m
            [36m<RCTScrollView>[39m
              [36m<View>[39m
                [36m<View>[39m
                  [36m<View[39m
                    [33maccessible[39m=[32m{true}[39m
                  [36m>[39m
                    [36m<Text>[39m
                      [0mAll ([0m
                      [0m4[0m
                      [0m)[0m
                    [36m</Text>[39m
                  [36m</View>[39m
                  [36m<View[39m
                    [33maccessible[39m=[32m{true}[39m
                  [36m>[39m
                    [36m<Text>[39m
                      [0m­ƒÜø[0m
                    [36m</Text>[39m
                    [36m<Text>[39m
                      [0mMoving Truck[0m
                    [36m</Text>[39m
                  [36m</View>[39m
                  [36m<View[39m
                    [33maccessible[39m=[32m{true}[39m
                  [36m>[39m
                    [36m<Text>[39m
                      [0m­ƒÜÉ[0m
                    [36m</Text>[39m
                    [36m<Text>[39m
                      [0mVan[0m
                    [36m</Text>[39m
                  [36m</View>[39m
                  [36m<View[39m
                    [33maccessible[39m=[32m{true}[39m
                  [36m>[39m
                    [36m<Text>[39m
                      [0m­ƒÜ£[0m
                    [36m</Text>[39m
                    [36m<Text>[39m
                      [0mTrailer[0m
                    [36m</Text>[39m
                  [36m</View>[39m
                  [36m<View[39m
                    [33maccessible[39m=[32m{true}[39m
                  [36m>[39m
                    [36m<Text>[39m
                      [0m­ƒø╗[0m
                    [36m</Text>[39m
                    [36m<Text>[39m
                      [0mUte[0m
                    [36m</Text>[39m
                  [36m</View>[39m
                  [36m<View[39m
                    [33maccessible[39m=[32m{true}[39m
                  [36m>[39m
                    [36m<Text>[39m
                      [0m­ƒøÆ[0m
                    [36m</Text>[39m
                    [36m<Text>[39m
                      [0mDolly[0m
                    [36m</Text>[39m
                  [36m</View>[39m
                  [36m<View[39m
                    [33maccessible[39m=[32m{true}[39m
                  [36m>[39m
                    [36m<Text>[39m
                      [0m­ƒöº[0m
                    [36m</Text>[39m
                    [36m<Text>[39m
                      [0mTools[0m
                    [36m</Text>[39m
                  [36m</View>[39m
                [36m</View>[39m
              [36m</View>[39m
            [36m</RCTScrollView>[39m
          [36m</View>[39m
          [36m<View>[39m
            [36m<Text>[39m
              [0mFilter by Status[0m
            [36m</Text>[39m
            [36m<View>[39m
              [36m<View[39m
                [33maccessible[39m=[32m{true}[39m
              [36m>[39m
                [36m<Text>[39m
                  [0mAll[0m
                [36m</Text>[39m
              [36m</View>[39m
              [36m<View[39m
                [33maccessible[39m=[32m{true}[39m
              [36m>[39m
                [36m<Text>[39m
                  [0mAvailable[0m
                [36m</Text>[39m
              [36m</View>[39m
              [36m<View[39m
                [33maccessible[39m=[32m{true}[39m
              [36m>[39m
                [36m<Text>[39m
                  [0mIn Use[0m
                [36m</Text>[39m
              [36m</View>[39m
              [36m<View[39m
                [33maccessible[39m=[32m{true}[39m
              [36m>[39m
                [36m<Text>[39m
                  [0mMaintenance[0m
                [36m</Text>[39m
              [36m</View>[39m
              [36m<View[39m
                [33maccessible[39m=[32m{true}[39m
              [36m>[39m
                [36m<Text>[39m
                  [0mOut of Service[0m
                [36m</Text>[39m
              [36m</View>[39m
            [36m</View>[39m
          [36m</View>[39m
          [36m<View>[39m
            [36m<View[39m
              [33maccessible[39m=[32m{true}[39m
            [36m>[39m
              [36m<View>[39m
                [36m<View>[39m
                  [36m<View>[39m
                    [36m<Text>[39m
                      [0m­ƒÜ£[0m
                    [36m</Text>[39m
                  [36m</View>[39m
                  [36m<View>[39m
                    [36m<Text>[39m
                      [0mBox Trailer[0m
                    [36m</Text>[39m
                    [36m<Text>[39m
                      [0mTrailer[0m
                    [36m</Text>[39m
                  [36m</View>[39m
                [36m</View>[39m
                [36m<View>[39m
                  [36m<Text>[39m
                    [0mAvailable[0m
                  [36m</Text>[39m
                [36m</View>[39m
              [36m</View>[39m
              [36m<View>[39m
                [36m<View>[39m
                  [36m<Text>[39m
                    [0m¯½®[0m
                  [36m</Text>[39m
                  [36m<Text>[39m
                    [0mTRL-456[0m
                  [36m</Text>[39m
                [36m</View>[39m
                [36m<View>[39m
                  [36m<Text>[39m
                    [0m¯½ù[0m
                  [36m</Text>[39m
                  [36m<Text>[39m
                    [0m2021[0m
                    [0m [0m
                    [0mCustom[0m
                  [36m</Text>[39m
                [36m</View>[39m
                [36m<View>[39m
                  [36m<Text>[39m
                    [0m¯«Ü[0m
                  [36m</Text>[39m
                  [36m<Text>[39m
                    [0m4 cubic meters[0m
                  [36m</Text>[39m
                [36m</View>[39m
                [36m<View>[39m
                  [36m<Text>[39m
                    [0m¯│å[0m
                  [36m</Text>[39m
                  [36m<Text>[39m
                    [0mMelbourne Branch[0m
                  [36m</Text>[39m
                [36m</View>[39m
                [36m<View>[39m
                  [36m<Text>[39m
                    [0m¯¬┐[0m
                  [36m</Text>[39m
                  [36m<Text>[39m
                    [0mNext service: [0m
                    [0m2026-01-10[0m
                  [36m</Text>[39m
                [36m</View>[39m
              [36m</View>[39m
              [36m<View>[39m
                [36m<View[39m
                  [33maccessible[39m=[32m{true}[39m
                [36m>[39m
                  [36m<Text>[39m
                    [0m¯«ö[0m
                  [36m</Text>[39m
                  [36m<Text>[39m
                    [0mEdit[0m
                  [36m</Text>[39m
                [36m</View>[39m
                [36m<View[39m
                  [33maccessible[39m=[32m{true}[39m
                [36m>[39m
                  [36m<Text>[39m
                    [0m¯╗À[0m
                  [36m</Text>[39m
                  [36m<Text>[39m
                    [0mDelete[0m
                  [36m</Text>[39m
                [36m</View>[39m
              [36m</View>[39m
            [36m</View>[39m
            [36m<View[39m
              [33maccessible[39m=[32m{true}[39m
            [36m>[39m
              [36m<View>[39m
                [36m<View>[39m
                  [36m<View>[39m
                    [36m<Text>[39m
                      [0m­ƒÜÉ[0m
                    [36m</Text>[39m
                  [36m</View>[39m
                  [36m<View>[39m
                    [36m<Text>[39m
                      [0mFord Transit[0m
                    [36m</Text>[39m
                    [36m<Text>[39m
                      [0mVan[0m
                    [36m</Text>[39m
                  [36m</View>[39m
                [36m</View>[39m
                [36m<View>[39m
                  [36m<Text>[39m
                    [0mIn Use[0m
                  [36m</Text>[39m
                [36m</View>[39m
              [36m</View>[39m
              [36m<View>[39m
                [36m<View>[39m
                  [36m<Text>[39m
                    [0m¯½®[0m
                  [36m</Text>[39m
                  [36m<Text>[39m
                    [0mXYZ-789[0m
                  [36m</Text>[39m
                [36m</View>[39m
                [36m<View>[39m
                  [36m<Text>[39m
                    [0m¯½ù[0m
                  [36m</Text>[39m
                  [36m<Text>[39m
                    [0m2023[0m
                    [0m [0m
                    [0mFord[0m
                  [36m</Text>[39m
                [36m</View>[39m
                [36m<View>[39m
                  [36m<Text>[39m
                    [0m¯«Ü[0m
                  [36m</Text>[39m
                  [36m<Text>[39m
                    [0m2.5 cubic meters[0m
                  [36m</Text>[39m
                [36m</View>[39m
                [36m<View>[39m
                  [36m<Text>[39m
                    [0m¯│å[0m
                  [36m</Text>[39m
                  [36m<Text>[39m
                    [0mSydney Depot[0m
                  [36m</Text>[39m
                [36m</View>[39m
                [36m<View>[39m
                  [36m<Text>[39m
                    [0m¯¬┐[0m
                  [36m</Text>[39m
                  [36m<Text>[39m
                    [0mNext service: [0m
                    [0m2025-11-20[0m
                  [36m</Text>[39m
                [36m</View>[39m
                [36m<View>[39m
                  [36m<Text>[39m
                    [0m¯Â¡[0m
                  [36m</Text>[39m
                  [36m<Text>[39m
                    [0mAssigned to: [0m
                    [0mJohn Smith[0m
                  [36m</Text>[39m
                [36m</View>[39m
              [36m</View>[39m
              [36m<View>[39m
                [36m<View[39m
                  [33maccessible[39m=[32m{true}[39m
                [36m>[39m
                  [36m<Text>[39m
                    [0m¯«ö[0m
                  [36m</Text>[39m
                  [36m<Text>[39m
                    [0mEdit[0m
                  [36m</Text>[39m
                [36m</View>[39m
                [36m<View[39m
                  [33maccessible[39m=[32m{true}[39m
                [36m>[39m
                  [36m<Text>[39m
                    [0m¯╗À[0m
                  [36m</Text>[39m
                  [36m<Text>[39m
                    [0mDelete[0m
                  [36m</Text>[39m
                [36m</View>[39m
              [36m</View>[39m
            [36m</View>[39m
            [36m<View[39m
              [33maccessible[39m=[32m{true}[39m
            [36m>[39m
              [36m<View>[39m
                [36m<View>[39m
                  [36m<View>[39m
                    [36m<Text>[39m
                      [0m­ƒÜø[0m
                    [36m</Text>[39m
                  [36m</View>[39m
                  [36m<View>[39m
                    [36m<Text>[39m
                      [0mIsuzu NPR 200[0m
                    [36m</Text>[39m
                    [36m<Text>[39m
                      [0mMoving Truck[0m
                    [36m</Text>[39m
                  [36m</View>[39m
                [36m</View>[39m
                [36m<View>[39m
                  [36m<Text>[39m
                    [0mAvailable[0m
                  [36m</Text>[39m
                [36m</View>[39m
              [36m</View>[39m
              [36m<View>[39m
                [36m<View>[39m
                  [36m<Text>[39m
                    [0m¯½®[0m
                  [36m</Text>[39m
                  [36m<Text>[39m
                    [0mABC-123[0m
                  [36m</Text>[39m
                [36m</View>[39m
                [36m<View>[39m
                  [36m<Text>[39m
                    [0m¯½ù[0m
                  [36m</Text>[39m
                  [36m<Text>[39m
                    [0m2022[0m
                    [0m [0m
                    [0mIsuzu[0m
                  [36m</Text>[39m
                [36m</View>[39m
                [36m<View>[39m
                  [36m<Text>[39m
                    [0m¯«Ü[0m
                  [36m</Text>[39m
                  [36m<Text>[39m
                    [0m3.5 tonnes[0m
                  [36m</Text>[39m
                [36m</View>[39m
                [36m<View>[39m
                  [36m<Text>[39m
                    [0m¯│å[0m
                  [36m</Text>[39m
                  [36m<Text>[39m
                    [0mSydney Depot[0m
                  [36m</Text>[39m
                [36m</View>[39m
                [36m<View>[39m
                  [36m<Text>[39m
                    [0m¯¬┐[0m
                  [36m</Text>[39m
                  [36m<Text>[39m
                    [0mNext service: [0m
                    [0m2025-12-15[0m
                  [36m</Text>[39m
                [36m</View>[39m
              [36m</View>[39m
              [36m<View>[39m
                [36m<View[39m
                  [33maccessible[39m=[32m{true}[39m
                [36m>[39m
                  [36m<Text>[39m
                    [0m¯«ö[0m
                  [36m</Text>[39m
                  [36m<Text>[39m
                    [0mEdit[0m
                  [36m</Text>[39m
                [36m</View>[39m
                [36m<View[39m
                  [33maccessible[39m=[32m{true}[39m
                [36m>[39m
                  [36m<Text>[39m
                    [0m¯╗À[0m
                  [36m</Text>[39m
                  [36m<Text>[39m
                    [0mDelete[0m
                  [36m</Text>[39m
                [36m</View>[39m
              [36m</View>[39m
            [36m</View>[39m
            [36m<View[39m
              [33maccessible[39m=[32m{true}[39m
            [36m>[39m
              [36m<View>[39m
                [36m<View>[39m
                  [36m<View>[39m
                    [36m<Text>[39m
                      [0m­ƒø╗[0m
                    [36m</Text>[39m
                  [36m</View>[39m
                  [36m<View>[39m
                    [36m<Text>[39m
                      [0mToyota HiLux[0m
                    [36m</Text>[39m
                    [36m<Text>[39m
                      [0mUte[0m
                    [36m</Text>[39m
                  [36m</View>[39m
                [36m</View>[39m
                [36m<View>[39m
                  [36m<Text>[39m
                    [0mMaintenance[0m
                  [36m</Text>[39m
                [36m</View>[39m
              [36m</View>[39m
              [36m<View>[39m
                [36m<View>[39m
                  [36m<Text>[39m
                    [0m¯½®[0m
                  [36m</Text>[39m
                  [36m<Text>[39m
                    [0mHIL-321[0m
                  [36m</Text>[39m
                [36m</View>[39m
                [36m<View>[39m
                  [36m<Text>[39m
                    [0m¯½ù[0m
                  [36m</Text>[39m
                  [36m<Text>[39m
                    [0m2024[0m
                    [0m [0m
                    [0mToyota[0m
                  [36m</Text>[39m
                [36m</View>[39m
                [36m<View>[39m
                  [36m<Text>[39m
                    [0m¯«Ü[0m
                  [36m</Text>[39m
                  [36m<Text>[39m
                    [0m1 tonne[0m
                  [36m</Text>[39m
                [36m</View>[39m
                [36m<View>[39m
                  [36m<Text>[39m
                    [0m¯│å[0m
                  [36m</Text>[39m
                  [36m<Text>[39m
                    [0mSydney Depot[0m
                  [36m</Text>[39m
                [36m</View>[39m
                [36m<View>[39m
                  [36m<Text>[39m
                    [0m¯¬┐[0m
                  [36m</Text>[39m
                  [36m<Text>[39m
                    [0mNext service: [0m
                    [0m2025-10-30[0m
                  [36m</Text>[39m
                [36m</View>[39m
              [36m</View>[39m
              [36m<View>[39m
                [36m<View[39m
                  [33maccessible[39m=[32m{true}[39m
                [36m>[39m
                  [36m<Text>[39m
                    [0m¯«ö[0m
                  [36m</Text>[39m
                  [36m<Text>[39m
                    [0mEdit[0m
                  [36m</Text>[39m
                [36m</View>[39m
                [36m<View[39m
                  [33maccessible[39m=[32m{true}[39m
                [36m>[39m
                  [36m<Text>[39m
                    [0m¯╗À[0m
                  [36m</Text>[39m
                  [36m<Text>[39m
                    [0mDelete[0m
                  [36m</Text>[39m
                [36m</View>[39m
              [36m</View>[39m
            [36m</View>[39m
          [36m</View>[39m
        [36m</View>[39m
      [36m</RCTScrollView>[39m
      [36m<Modal>[39m
        [36m<View>[39m
          [36m<View>[39m
            [36m<Text>[39m
              [0mAjouter un v├®hicule[0m
            [36m</Text>[39m
            [36m<View[39m
              [33maccessible[39m=[32m{true}[39m
            [36m>[39m
              [36m<Text>[39m
                [0m¯¡ï[0m
              [36m</Text>[39m
            [36m</View>[39m
          [36m</View>[39m
          [36m<RCTScrollView>[39m
            [36m<View>[39m
              [36m<View>[39m
                [36m<Text>[39m
                  [0mType de v├®hicule[0m
                [36m</Text>[39m
                [36m<Text>[39m
                  [0mS├®lectionnez le type de v├®hicule ├á ajouter[0m
                [36m</Text>[39m
                [36m<RCTScrollView>[39m
                  [36m<View>[39m
                    [36m<View[39m
                      [33maccessible[39m=[32m{true}[39m
                    [36m>[39m
                      [36m<View>[39m
                        [36m<Text>[39m
                          [0m­ƒÜø[0m
                        [36m</Text>[39m
                      [36m</View>[39m
                      [36m<Text>[39m
                        [0mMoving Truck[0m
                      [36m</Text>[39m
                      [36m<Text>[39m
                        [0mLarge capacity truck for residential moves[0m
                      [36m</Text>[39m
                    [36m</View>[39m
                    [36m<View[39m
                      [33maccessible[39m=[32m{true}[39m
                    [36m>[39m
                      [36m<View>[39m
                        [36m<Text>[39m
                          [0m­ƒÜÉ[0m
                        [36m</Text>[39m
                      [36m</View>[39m
                      [36m<Text>[39m
                        [0mVan[0m
                      [36m</Text>[39m
                      [36m<Text>[39m
                        [0mMedium size for smaller jobs and deliveries[0m
                      [36m</Text>[39m
                    [36m</View>[39m
                    [36m<View[39m
                      [33maccessible[39m=[32m{true}[39m
                    [36m>[39m
                      [36m<View>[39m
                        [36m<Text>[39m
                          [0m­ƒÜ£[0m
                        [36m</Text>[39m
                      [36m</View>[39m
                      [36m<Text>[39m
                        [0mTrailer[0m
                      [36m</Text>[39m
                      [36m<Text>[39m
                        [0mAdditional capacity for large moves[0m
                      [36m</Text>[39m
                    [36m</View>[39m
                    [36m<View[39m
                      [33maccessible[39m=[32m{true}[39m
                    [36m>[39m
                      [36m<View>[39m
                        [36m<Text>[39m
                          [0m­ƒø╗[0m
                        [36m</Text>[39m
                      [36m</View>[39m
                      [36m<Text>[39m
                        [0mUte[0m
                      [36m</Text>[39m
                      [36m<Text>[39m
                        [0mLight pickups for quick jobs[0m
                      [36m</Text>[39m
                    [36m</View>[39m
                    [36m<View[39m
                      [33maccessible[39m=[32m{true}[39m
                    [36m>[39m
                      [36m<View>[39m
                        [36m<Text>[39m
                          [0m­ƒøÆ[0m
                        [36m</Text>[39m
                      [36m</View>[39m
                      [36m<Text>[39m
                        [0mDolly[0m
                      [36m</Text>[39m
                      [36m<Text>[39m
                        [0mEquipment for moving heavy items[0m
                      [36m</Text>[39m
                    [36m</View>[39m
                    [36m<View[39m
                      [33maccessible[39m=[32m{true}[39m
                    [36m>[39m
                      [36m<View>[39m
                        [36m<Text>[39m
                          [0m­ƒöº[0m
                        [36m</Text>[39m
                      [36m</View>[39m
                      [36m<Text>[39m
                        [0mTools[0m
                      [36m</Text>[39m
                      [36m<Text>[39m
                        [0mProfessional moving tools and equipment[0m
                      [36m</Text>[39m
                    [36m</View>[39m
                  [36m</View>[39m
                [36m</RCTScrollView>[39m
              [36m</View>[39m
            [36m</View>[39m
          [36m</RCTScrollView>[39m
        [36m</View>[39m
      [36m</Modal>[39m
    [36m</View>[39m

    [0m [90m 400 |[39m       
     [90m 401 |[39m       [90m// Le modal devrait s'ouvrir[39m
    [31m[1m>[22m[39m[90m 402 |[39m       expect(getByText([32m'Select vehicle 
type'[39m))[33m.[39mtoBeTruthy()
     [90m     |[39m              [31m[1m^[22m[39m
     [90m 403 |[39m     })
     [90m 404 |[39m
     [90m 405 |[39m     it([32m'should add new vehicle to list when form is submitted'[39m[33m,[39m 
[36masync[39m () [33m=>[39m {[0m

      at Object.getByText (__tests__/screens/TrucksScreen.test.tsx:402:14)

  ÔùÅ TrucksScreen ÔÇ║ Add Vehicle Modal ÔÇ║ should add new vehicle to list when form is submitted

    Found multiple elements with text: Moving Truck

    [0m [90m 410 |[39m       
     [90m 411 |[39m       [90m// Remplir le formulaire[39m
    [31m[1m>[22m[39m[90m 412 |[39m       fireEvent[33m.[39mpress(getByText([32m'Moving Truck'[39m))
     [90m     |[39m                       [31m[1m^[22m[39m
     [90m 413 |[39m       fireEvent[33m.[39mpress(getByText([32m'Mercedes-Benz'[39m))
     [90m 414 |[39m       fireEvent[33m.[39mchangeText(getByPlaceholderText([32m'Enter model'[39m)[33m,[39m 
[32m'Atego'[39m)
     [90m 415 |[39m       fireEvent[33m.[39mchangeText(getByPlaceholderText([32m'YYYY'[39m)[33m,[39m 
[32m'2023'[39m)[0m

      at Object.getByText (__tests__/screens/TrucksScreen.test.tsx:412:23)
      at asyncGeneratorStep (node_modules/@babel/runtime/helpers/asyncToGenerator.js:3:17)
      at _next (node_modules/@babel/runtime/helpers/asyncToGenerator.js:17:9)
      at node_modules/@babel/runtime/helpers/asyncToGenerator.js:22:7
      at Object.<anonymous> (node_modules/@babel/runtime/helpers/asyncToGenerator.js:14:12)

  ÔùÅ TrucksScreen ÔÇ║ Add Vehicle Modal ÔÇ║ should update statistics after adding a vehicle

    Found multiple elements with text: Van

    [0m [90m 438 |[39m       [90m// Ajouter un v├®hicule[39m
     [90m 439 |[39m       fireEvent[33m.[39mpress(getByText([32m'Add Vehicle'[39m))
    [31m[1m>[22m[39m[90m 440 |[39m       fireEvent[33m.[39mpress(getByText([32m'Van'[39m))
     [90m     |[39m                       [31m[1m^[22m[39m
     [90m 441 |[39m       fireEvent[33m.[39mpress(getByText([32m'Toyota'[39m))
     [90m 442 |[39m       fireEvent[33m.[39mchangeText(getByPlaceholderText([32m'Enter model'[39m)[33m,[39m 
[32m'HiAce'[39m)
     [90m 443 |[39m       fireEvent[33m.[39mchangeText(getByPlaceholderText([32m'YYYY'[39m)[33m,[39m 
[32m'2024'[39m)[0m

      at Object.getByText (__tests__/screens/TrucksScreen.test.tsx:440:23)
      at asyncGeneratorStep (node_modules/@babel/runtime/helpers/asyncToGenerator.js:3:17)
      at _next (node_modules/@babel/runtime/helpers/asyncToGenerator.js:17:9)
      at node_modules/@babel/runtime/helpers/asyncToGenerator.js:22:7
      at Object.<anonymous> (node_modules/@babel/runtime/helpers/asyncToGenerator.js:14:12)

  ÔùÅ TrucksScreen ÔÇ║ Add Vehicle Modal ÔÇ║ should close modal after adding vehicle

    Found multiple elements with text: Ute

    [0m [90m 459 |[39m       
     [90m 460 |[39m       [90m// Remplir et soumettre[39m
    [31m[1m>[22m[39m[90m 461 |[39m       fireEvent[33m.[39mpress(getByText([32m'Ute'[39m))
     [90m     |[39m                       [31m[1m^[22m[39m
     [90m 462 |[39m       fireEvent[33m.[39mpress(getByText([32m'Nissan'[39m))
     [90m 463 |[39m       fireEvent[33m.[39mchangeText(getByPlaceholderText([32m'Enter model'[39m)[33m,[39m 
[32m'Navara'[39m)
     [90m 464 |[39m       fireEvent[33m.[39mchangeText(getByPlaceholderText([32m'YYYY'[39m)[33m,[39m 
[32m'2024'[39m)[0m

      at Object.getByText (__tests__/screens/TrucksScreen.test.tsx:461:23)
      at asyncGeneratorStep (node_modules/@babel/runtime/helpers/asyncToGenerator.js:3:17)
      at _next (node_modules/@babel/runtime/helpers/asyncToGenerator.js:17:9)
      at node_modules/@babel/runtime/helpers/asyncToGenerator.js:22:7
      at Object.<anonymous> (node_modules/@babel/runtime/helpers/asyncToGenerator.js:14:12)

  ÔùÅ TrucksScreen ÔÇ║ Empty State ÔÇ║ should show empty state message when all vehicles are filtered out

    Found multiple elements with text: Moving Truck

    [0m [90m 516 |[39m       
     [90m 517 |[39m       [90m// Combiner des filtres qui excluent tous les v├®hicules[39m
    [31m[1m>[22m[39m[90m 518 |[39m       fireEvent[33m.[39mpress(getByText([32m'Moving Truck'[39m))
     [90m     |[39m                       [31m[1m^[22m[39m
     [90m 519 |[39m       fireEvent[33m.[39mpress(getByText([32m'In Use'[39m))
     [90m 520 |[39m       
     [90m 521 |[39m       [90m// Moving Truck est Available, pas In Use[39m[0m

      at Object.getByText (__tests__/screens/TrucksScreen.test.tsx:518:23)

  ÔùÅ TrucksScreen ÔÇ║ Responsive Design ÔÇ║ should display statistics in a row layout

    Found multiple elements with text: Available

    [0m [90m 533 |[39m       [90m// Les 4 cartes devraient ├¬tre pr├®sentes[39m
     [90m 534 |[39m       expect(getByText([32m'Total'[39m))[33m.[39mtoBeTruthy()
    [31m[1m>[22m[39m[90m 535 |[39m       expect(getByText([32m'Available'[39m))[33m.[39mtoBeTruthy()
     [90m     |[39m              [31m[1m^[22m[39m
     [90m 536 |[39m       expect(getByText([32m'In Use'[39m))[33m.[39mtoBeTruthy()
     [90m 537 |[39m       expect(getByText([32m'Maintenance'[39m))[33m.[39mtoBeTruthy()
     [90m 538 |[39m     })[0m

      at Object.getByText (__tests__/screens/TrucksScreen.test.tsx:535:14)

  ÔùÅ TrucksScreen ÔÇ║ Responsive Design ÔÇ║ should display type filters in horizontal scroll

    Found multiple elements with text: Moving Truck

    [0m [90m 542 |[39m       
     [90m 543 |[39m       [90m// Tous les filtres devraient ├¬tre pr├®sents[39m
    [31m[1m>[22m[39m[90m 544 |[39m       expect(getByText([32m'Moving Truck'[39m))[33m.[39mtoBeTruthy()
     [90m     |[39m              [31m[1m^[22m[39m
     [90m 545 |[39m       expect(getByText([32m'Van'[39m))[33m.[39mtoBeTruthy()
     [90m 546 |[39m       expect(getByText([32m'Trailer'[39m))[33m.[39mtoBeTruthy()
     [90m 547 |[39m     })[0m

      at Object.getByText (__tests__/screens/TrucksScreen.test.tsx:544:14)

  ÔùÅ TrucksScreen ÔÇ║ Integration ÔÇ║ should maintain filter state when adding a vehicle

    Found multiple elements with text: Van

    [0m [90m 566 |[39m       
     [90m 567 |[39m       [90m// Appliquer un filtre[39m
    [31m[1m>[22m[39m[90m 568 |[39m       fireEvent[33m.[39mpress(getByText([32m'Van'[39m))
     [90m     |[39m                       [31m[1m^[22m[39m
     [90m 569 |[39m       
     [90m 570 |[39m       [90m// Ajouter un v├®hicule (pas un Van)[39m
     [90m 571 |[39m       fireEvent[33m.[39mpress(getByText([32m'Add Vehicle'[39m))[0m

      at Object.getByText (__tests__/screens/TrucksScreen.test.tsx:568:23)
      at asyncGeneratorStep (node_modules/@babel/runtime/helpers/asyncToGenerator.js:3:17)
      at _next (node_modules/@babel/runtime/helpers/asyncToGenerator.js:17:9)
      at node_modules/@babel/runtime/helpers/asyncToGenerator.js:22:7
      at Object.<anonymous> (node_modules/@babel/runtime/helpers/asyncToGenerator.js:14:12)

  ÔùÅ TrucksScreen ÔÇ║ Integration ÔÇ║ should update Available count when adding an available vehicle

    Found multiple elements with text: Trailer

    [0m [90m 595 |[39m       [90m// Ajouter un v├®hicule (nouveau v├®hicule = available par d├®faut)[39m
     [90m 596 |[39m       fireEvent[33m.[39mpress(getByText([32m'Add Vehicle'[39m))
    [31m[1m>[22m[39m[90m 597 |[39m       fireEvent[33m.[39mpress(getByText([32m'Trailer'[39m))
     [90m     |[39m                       [31m[1m^[22m[39m
     [90m 598 |[39m       fireEvent[33m.[39mpress(getByText([32m'Custom'[39m))
     [90m 599 |[39m       fireEvent[33m.[39mchangeText(getByPlaceholderText([32m'Enter model'[39m)[33m,[39m 
[32m'Flatbed'[39m)
     [90m 600 |[39m       fireEvent[33m.[39mchangeText(getByPlaceholderText([32m'YYYY'[39m)[33m,[39m 
[32m'2023'[39m)[0m

      at Object.getByText (__tests__/screens/TrucksScreen.test.tsx:597:23)
      at asyncGeneratorStep (node_modules/@babel/runtime/helpers/asyncToGenerator.js:3:17)
      at _next (node_modules/@babel/runtime/helpers/asyncToGenerator.js:17:9)
      at node_modules/@babel/runtime/helpers/asyncToGenerator.js:22:7
      at Object.<anonymous> (node_modules/@babel/runtime/helpers/asyncToGenerator.js:14:12)

  ÔùÅ TrucksScreen ÔÇ║ Integration ÔÇ║ should handle multiple filter changes smoothly

    Found multiple elements with text: Van

    [0m [90m 614 |[39m       
     [90m 615 |[39m       [90m// Filtrer par Van[39m
    [31m[1m>[22m[39m[90m 616 |[39m       fireEvent[33m.[39mpress(getByText([32m'Van'[39m))
     [90m     |[39m                       [31m[1m^[22m[39m
     [90m 617 |[39m       expect(getByText([32m'Ford Transit'[39m))[33m.[39mtoBeTruthy()
     [90m 618 |[39m       expect(queryByText([32m'Isuzu NPR 200'[39m))[33m.[39mtoBeNull()
     [90m 619 |[39m       [0m

      at Object.getByText (__tests__/screens/TrucksScreen.test.tsx:616:23)

Test Suites: 1 failed, 1 total
Tests:       29 failed, 18 passed, 47 total
Snapshots:   0 total
Time:        16.128 s
Ran all test suites matching /TrucksScreen.test.tsx/i.
